const { createClient } = require('@supabase/supabase-js');

const supabaseUrl = 'https://blbgiudtlbbisotwummj.supabase.co';
const supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImJsYmdpdWR0bGJiaXNvdHd1bW1qIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTY1MzkwNzMsImV4cCI6MjA3MjExNTA3M30.Gr0WQkjE3ihI1D3qbadm_q_4pVYDKv1rWOGI1ZM4Aw0';

const supabase = createClient(supabaseUrl, supabaseKey);

async function checkCompany() {
  try {
    console.log('ƒêang ki·ªÉm tra c√¥ng ty c√≥ m√£ s·ªë thu·∫ø: 0316461800...');
    
    const { data, error } = await supabase
      .from('organizations')
      .select('*')
      .eq('tax_code', '0316461800');
    
    if (error) {
      console.error('L·ªói khi truy v·∫•n:', error);
      return;
    }
    
    if (data && data.length > 0) {
      console.log('\n‚úÖ T√¨m th·∫•y c√¥ng ty:');
      console.log('üìã Th√¥ng tin chi ti·∫øt:');
      data.forEach((company, index) => {
        console.log(`\n--- C√¥ng ty ${index + 1} ---`);
        console.log(`üè¢ T√™n: ${company.name}`);
        console.log(`üÜî ID: ${company.id}`);
        console.log(`üìÑ M√£ s·ªë thu·∫ø: ${company.tax_code}`);
        console.log(`üìä C·∫•p ƒë·ªô: ${company.level}`);
        console.log(`üè≠ Ng√†nh ngh·ªÅ: ${company.industry}`);
        console.log(`üí∞ V·ªën ƒë·∫ßu t∆∞: ${company.total_investment_value ? (company.total_investment_value / 1000000).toFixed(0) + 'M VNƒê' : 'N/A'}`);
        console.log(`üìà BMC s·ªü h·ªØu: ${company.bmc_equity_percentage}%`);
        console.log(`üìÖ NƒÉm ƒë·∫ßu t∆∞: ${company.investment_year || 'N/A'}`);
        console.log(`üìù M√¥ t·∫£: ${company.description || 'N/A'}`);
        console.log(`‚è∞ Ng√†y t·∫°o: ${new Date(company.created_at).toLocaleString('vi-VN')}`);
      });
      
      // Ki·ªÉm tra xem c√≥ ph·∫£i F1 kh√¥ng
      const f1Companies = data.filter(company => company.level === 'F1');
      if (f1Companies.length > 0) {
        console.log('\nüéØ K·∫øt lu·∫≠n: ƒê√¢y l√† c√¥ng ty F1!');
      } else {
        console.log(`\nüìç K·∫øt lu·∫≠n: ƒê√¢y KH√îNG ph·∫£i c√¥ng ty F1. C·∫•p ƒë·ªô hi·ªán t·∫°i: ${data[0].level}`);
      }
    } else {
      console.log('\n‚ùå Kh√¥ng t√¨m th·∫•y c√¥ng ty n√†o c√≥ m√£ s·ªë thu·∫ø: 0316461800');
      
      // Ki·ªÉm tra t·∫•t c·∫£ c√¥ng ty F1 ƒë·ªÉ so s√°nh
      console.log('\nüîç ƒêang ki·ªÉm tra t·∫•t c·∫£ c√¥ng ty F1 trong h·ªá th·ªëng...');
      const { data: f1Data, error: f1Error } = await supabase
        .from('organizations')
        .select('name, tax_code, level')
        .eq('level', 'F1');
      
      if (f1Error) {
        console.error('L·ªói khi truy v·∫•n F1:', f1Error);
      } else if (f1Data && f1Data.length > 0) {
        console.log(`\nüìä T√¨m th·∫•y ${f1Data.length} c√¥ng ty F1:`);
        f1Data.forEach((company, index) => {
          console.log(`${index + 1}. ${company.name} - MST: ${company.tax_code || 'N/A'}`);
        });
      } else {
        console.log('\nüì≠ Kh√¥ng c√≥ c√¥ng ty F1 n√†o trong h·ªá th·ªëng.');
      }
    }
  } catch (err) {
    console.error('L·ªói kh√¥ng mong mu·ªën:', err);
  }
}

checkCompany();