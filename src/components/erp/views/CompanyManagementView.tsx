import { useState } from "react";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { Progress } from "@/components/ui/progress";
import { F2HoldingView } from "./F2HoldingView";
import { F3CompanyView } from "./F3CompanyView";
import { AutoTieringSystem } from "../AutoTieringSystem";
import { DataEntryForms } from "../DataEntryForms";
import { 
  Building2, 
  TrendingUp, 
  Users, 
  DollarSign, 
  Target, 
  Package, 
  AlertTriangle, 
  FileText,
  Settings,
  Plus,
  Download,
  Search,
  Filter,
  BarChart3,
  PieChart,
  ArrowRight,
  Briefcase,
  MapPin,
  Calendar,
  Percent,
  Zap,
  Database
} from "lucide-react";
import { useNavigate } from "react-router-dom";

interface CompanyManagementViewProps {
  organizations: any[];
}

export function CompanyManagementView({ organizations }: CompanyManagementViewProps) {
  const [selectedTimeframe, setSelectedTimeframe] = useState("month");
  const [selectedCompany, setSelectedCompany] = useState<any>(null);
  const [viewMode, setViewMode] = useState("overview");
  const navigate = useNavigate();

  const getButtonVariant = (mode: string) => {
    return viewMode === mode ? "default" : "outline";
  };

  // Mockup F2-F3 Companies v·ªõi d·ªØ li·ªáu chi ti·∫øt theo y√™u c·∫ßu
  const mockF2Companies = [
    {
      id: "f2-01", level: "F2", name: "BMC F&B Holding", type: "C√¥ng ty ng√†nh",
      bmcOwnership: 0, revenue: 0, profit: 0, employees: 0, avgKPI: 0,
      sector: "F&B", subsidiaries: ["RAN Caf√©", "ColdBrew Vietnam"], complianceScore: 0,
      sectorFund: { total: 0, drawn: 0, roi: 0 }
    }
  ];

  const mockF3Companies = [
    {
      id: "f3-01", level: "F3", name: "EduHolding JSC", type: "C√¥ng ty chi·∫øn l∆∞·ª£c",
      bmcOwnership: 0, revenue: 0, profit: 0, employees: 0, avgKPI: 0,
      sector: "Education", subsidiaries: ["Talky English (F5)"], complianceScore: 0,
      contracts: 0, intlContracts: 0
    },
    {
      id: "f3-02", level: "F3", name: "GAJ Jewelry Co.", type: "C√¥ng ty chi·∫øn l∆∞·ª£c", 
      bmcOwnership: 0, revenue: 0, profit: 0, employees: 0, avgKPI: 0,
      sector: "Jewelry", subsidiaries: ["GAJ HN (F4)", "GAJ HCM (F4)"], complianceScore: 0,
      contracts: 0, importContracts: 0
    },
    {
      id: "f3-03", level: "F3", name: "BMC Tech Solutions", type: "C√¥ng ty chi·∫øn l∆∞·ª£c",
      bmcOwnership: 0, revenue: 0, profit: 0, employees: 0, avgKPI: 0,
      sector: "Technology", subsidiaries: ["AI Lab (F5)", "Blockchain Hub (F4)"], complianceScore: 0,
      contracts: 0, techPartnerships: 0
    }
  ];

  const allCompanies = [...mockF2Companies, ...mockF3Companies];
  
  const totalMetrics = {
    totalRevenue: allCompanies.reduce((sum, c) => sum + c.revenue, 0),
    totalProfit: allCompanies.reduce((sum, c) => sum + c.profit, 0), 
    totalEmployees: allCompanies.reduce((sum, c) => sum + c.employees, 0),
    avgKPI: Math.round(allCompanies.reduce((sum, c) => sum + c.avgKPI, 0) / allCompanies.length),
    avgCompliance: Math.round(allCompanies.reduce((sum, c) => sum + c.complianceScore, 0) / allCompanies.length),
    avgBMCOwnership: Math.round(allCompanies.reduce((sum, c) => sum + c.bmcOwnership, 0) / allCompanies.length)
  };

  // Render specific views based on mode
  if (viewMode === "f2-holding") {
    return <F2HoldingView holdingData={mockF2Companies[0]} onBack={() => setViewMode("overview")} />;
  }
  
  if (viewMode === "f3-companies") {
    return <F3CompanyView companyData={mockF3Companies[0]} onBack={() => setViewMode("overview")} />;
  }
  
  if (viewMode === "auto-tiering") {
    const tieringData = {
      id: "f2-f3-consolidated",
      name: "F2-F3 Company Management",
      level: "F2-F3",
      bmcOwnership: totalMetrics.avgBMCOwnership,
      kpiAverage4Quarters: totalMetrics.avgKPI,
      autoTieringStatus: "Active monitoring",
      nextTierTarget: "F1",
      tieringProgress: totalMetrics.avgBMCOwnership
    };
    return <AutoTieringSystem entityData={tieringData} />;
  }
  
  if (viewMode === "data-entry") {
    return <DataEntryForms entityLevel="F4" entityName="Company Management" />;
  }

  if (selectedCompany) {
    return <CompanyDetailDashboard company={selectedCompany} onBack={() => setSelectedCompany(null)} />;
  }

  return (
    <div className="space-y-6">
      {/* Header Section */}
      <div className="flex items-center justify-between">
        <div>
          <h1 className="text-3xl font-bold text-foreground">üè¢ Qu·∫£n Tr·ªã C√¥ng Ty F2-F3</h1>
          <p className="text-muted-foreground mt-2">
            Trung t√¢m qu·∫£n tr·ªã & theo d√µi realtime to√†n b·ªô c√¥ng ty th√†nh vi√™n - Auto-Tiering theo m·ªëc c·ªï ph·∫ßn
          </p>
          <div className="flex items-center space-x-4 mt-3">
            <Badge variant="secondary" className="text-sm">
              üè¨ {mockF2Companies.length} F2 Holdings
            </Badge>
            <Badge variant="secondary" className="text-sm">
              üè¢ {mockF3Companies.length} F3 Strategic
            </Badge>
            <Badge variant="outline" className="text-sm">
              üí∞ {totalMetrics.totalRevenue} t·ª∑ VNƒê total revenue
            </Badge>
          </div>
        </div>
        <div className="flex items-center space-x-3">
          <Select value={selectedTimeframe} onValueChange={setSelectedTimeframe}>
            <SelectTrigger className="w-32">
              <SelectValue />
            </SelectTrigger>
            <SelectContent>
              <SelectItem value="day">Ng√†y</SelectItem>
              <SelectItem value="week">Tu·∫ßn</SelectItem>
              <SelectItem value="month">Th√°ng</SelectItem>
              <SelectItem value="quarter">Qu√Ω</SelectItem>
              <SelectItem value="year">NƒÉm</SelectItem>
            </SelectContent>
          </Select>
          <Button variant="outline" size="sm">
            <Filter className="h-4 w-4 mr-2" />
            B·ªô l·ªçc
          </Button>
        </div>
      </div>

      {/* Navigation Bar cho F2-F3 */}
      <div className="bg-card p-4 rounded-lg border">
        <div className="flex items-center justify-between">
          <div className="flex items-center space-x-3">
            <Button 
              variant={viewMode === "overview" ? "default" : "outline"} 
              size="sm"
              onClick={() => setViewMode("overview")}
            >
              <BarChart3 className="h-4 w-4 mr-2" />
              üìä T·ªïng quan
            </Button>
            <Button 
              variant={getButtonVariant("f2-holding") as "default" | "outline"} 
              size="sm"
              onClick={() => setViewMode("f2-holding")}
            >
              <Building2 className="h-4 w-4 mr-2" />
              üè¨ F2 Holdings
            </Button>
            <Button 
              variant={getButtonVariant("f3-companies") as "default" | "outline"} 
              size="sm"
              onClick={() => setViewMode("f3-companies")}
            >
              <Briefcase className="h-4 w-4 mr-2" />
              üè¢ F3 Strategic
            </Button>
            <Button 
              variant={getButtonVariant("auto-tiering") as "default" | "outline"} 
              size="sm"
              onClick={() => setViewMode("auto-tiering")}
            >
              <Zap className="h-4 w-4 mr-2" />
              üéØ Auto-Tiering
            </Button>
            <Button 
              variant={getButtonVariant("data-entry") as "default" | "outline"} 
              size="sm"
              onClick={() => setViewMode("data-entry")}
            >
              <Database className="h-4 w-4 mr-2" />
              üìù Nh·∫≠p li·ªáu
            </Button>
          </div>
          <div className="flex items-center space-x-3">
            <Select value={selectedTimeframe} onValueChange={setSelectedTimeframe}>
              <SelectTrigger className="w-28">
                <SelectValue />
              </SelectTrigger>
              <SelectContent>
                <SelectItem value="month">Th√°ng</SelectItem>
                <SelectItem value="quarter">Qu√Ω</SelectItem>
                <SelectItem value="year">NƒÉm</SelectItem>
              </SelectContent>
            </Select>
            <Button variant="default" size="sm">
              <Search className="h-4 w-4 mr-2" />
              ü§ñ AI Query
            </Button>
          </div>
        </div>
      </div>

      {/* Overview Cards - D·ªØ li·ªáu th·ª±c t·ª´ mockup */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
        <Card>
          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
            <CardTitle className="text-sm font-medium">T·ªïng Doanh Thu F2-F3</CardTitle>
            <DollarSign className="h-4 w-4 text-muted-foreground" />
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold">{totalMetrics.totalRevenue} t·ª∑ VNƒê</div>
            <p className="text-xs text-muted-foreground">
              <TrendingUp className="inline h-3 w-3 mr-1" />
              F2: 210 t·ª∑ | F3: {totalMetrics.totalRevenue - 210} t·ª∑
            </p>
            <p className="text-xs text-muted-foreground mt-1">
              üí° F&B Holding d·∫´n ƒë·∫ßu v·ªõi 210 t·ª∑
            </p>
          </CardContent>
        </Card>

        <Card>
          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
            <CardTitle className="text-sm font-medium">L·ª£i Nhu·∫≠n H·ª£p Nh·∫•t</CardTitle>
            <Target className="h-4 w-4 text-muted-foreground" />
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold">{totalMetrics.totalProfit} t·ª∑ VNƒê</div>
            <p className="text-xs text-muted-foreground">
              T·ª∑ su·∫•t: {((totalMetrics.totalProfit / totalMetrics.totalRevenue) * 100).toFixed(1)}%
            </p>
            <p className="text-xs text-muted-foreground mt-1">
              üí° F3 GAJ Jewelry margin cao nh·∫•t 25.6%
            </p>
          </CardContent>
        </Card>

        <Card>
          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
            <CardTitle className="text-sm font-medium">T·ªïng Nh√¢n L·ª±c</CardTitle>
            <Users className="h-4 w-4 text-muted-foreground" />
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold">{totalMetrics.totalEmployees.toLocaleString()}</div>
            <p className="text-xs text-muted-foreground">
              KPI TB: {totalMetrics.avgKPI} | Compliance: {totalMetrics.avgCompliance}
            </p>
            <p className="text-xs text-muted-foreground mt-1">
              üí° F3 Tech Solutions KPI cao nh·∫•t
            </p>
          </CardContent>
        </Card>

        <Card>
          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
            <CardTitle className="text-sm font-medium">BMC Ownership</CardTitle>
            <Percent className="h-4 w-4 text-muted-foreground" />
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold">Ki·ªÉm so√°t</div>
            <p className="text-xs text-muted-foreground">
              F2: M·∫°nh | F3 TB: ·ªîn ƒë·ªãnh
            </p>
            <p className="text-xs text-muted-foreground mt-1">
              üí° F2 F&B s·∫µn s√†ng thƒÉng F1
            </p>
          </CardContent>
        </Card>
      </div>

      {/* Visual Analytics */}
      <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
        <Card className="lg:col-span-2">
          <CardHeader>
            <CardTitle className="flex items-center">
              <BarChart3 className="h-5 w-5 mr-2" />
              Bi·ªÉu ƒê·ªì T√†i Ch√≠nh H·ª£p Nh·∫•t
            </CardTitle>
          </CardHeader>
          <CardContent>
            <div className="h-64 bg-muted/20 rounded-lg flex items-center justify-center">
              <div className="text-center">
                <BarChart3 className="h-12 w-12 mx-auto text-muted-foreground mb-4" />
                <p className="text-muted-foreground">Bi·ªÉu ƒë·ªì Doanh thu - Chi ph√≠ - L·ª£i nhu·∫≠n theo th√°ng</p>
                <p className="text-xs text-muted-foreground mt-2">D·ªØ li·ªáu t·ª´ {allCompanies.length} c√¥ng ty th√†nh vi√™n</p>
              </div>
            </div>
          </CardContent>
        </Card>

        <Card>
          <CardHeader>
            <CardTitle className="flex items-center">
              <PieChart className="h-5 w-5 mr-2" />
              Auto-Tiering Progress
            </CardTitle>
          </CardHeader>
          <CardContent>
            <div className="space-y-4">
              <div>
                <div className="flex justify-between text-sm">
                  <span>üè¨ F2 ‚Üí F1 Ready</span>
                  <span className="text-green-600 font-semibold">65% ‚úÖ</span>
                </div>
                <Progress value={65} className="h-2" />
                <p className="text-xs text-muted-foreground mt-1">F&B Holding ƒë·∫°t ng∆∞·ª°ng 55%</p>
              </div>
              <div>
                <div className="flex justify-between text-sm">
                  <span>üè¢ F3 GAJ ‚Üí F2</span>
                  <span className="text-amber-600">35% ‚è≥</span>
                </div>
                <Progress value={35} className="h-2" />
                <p className="text-xs text-muted-foreground mt-1">C·∫ßn th√™m 20% ƒë·ªÉ ƒë·∫°t ng∆∞·ª°ng F2</p>
              </div>
              <div>
                <div className="flex justify-between text-sm">
                  <span>üè¢ F3 EduHolding ‚Üí F2</span>
                  <span className="text-blue-600">40% üìà</span>
                </div>
                <Progress value={40} className="h-2" />
                <p className="text-xs text-muted-foreground mt-1">Ti·∫øn ƒë·ªô t·ªët, d·ª± ki·∫øn Q4 ƒë·∫°t F2</p>
              </div>
              <div className="pt-2 border-t">
                <Button size="sm" className="w-full" onClick={() => setViewMode("auto-tiering")}>
                  üéØ Xem chi ti·∫øt Auto-Tiering
                </Button>
              </div>
            </div>
          </CardContent>
        </Card>
      </div>

      {/* Companies List */}
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center justify-between">
            <div className="flex items-center">
              <Building2 className="h-5 w-5 mr-2" />
              Danh S√°ch C√¥ng Ty Th√†nh Vi√™n ({allCompanies.length})
            </div>
            <Button size="sm">
              <Plus className="h-4 w-4 mr-2" />
              Th√™m c√¥ng ty
            </Button>
          </CardTitle>
        </CardHeader>
        <CardContent>
          <div className="space-y-4">
            {allCompanies.map((company, index) => (
              <div key={company.id} className="flex items-center justify-between p-4 border rounded-lg hover:bg-muted/50 transition-colors">
                <div className="flex items-center space-x-4">
                  <div className={`w-12 h-12 rounded-lg flex items-center justify-center ${
                    company.level === 'F2' ? 'bg-blue-50 dark:bg-blue-950/20' : 'bg-green-50 dark:bg-green-950/20'
                  }`}>
                    {company.level === 'F2' ? (
                      <Building2 className="h-6 w-6 text-blue-600" />
                    ) : (
                      <Briefcase className="h-6 w-6 text-green-600" />
                    )}
                  </div>
                  <div>
                    <h3 className="font-semibold">{company.name}</h3>
                    <div className="flex items-center space-x-4 text-sm text-muted-foreground">
                      <span className="flex items-center">
                        <Badge variant={company.level === 'F2' ? 'default' : 'secondary'} className="mr-2">
                          {company.level}
                        </Badge>
                        {company.type}
                      </span>
                      <span className="flex items-center">
                        <MapPin className="h-3 w-3 mr-1" />
                        {company.sector}
                      </span>
                      <span className="text-xs">
                        BMC: {company.bmcOwnership}%
                      </span>
                    </div>
                  </div>
                </div>
                <div className="flex items-center space-x-6 text-sm">
                  <div className="text-center">
                    <div className="font-semibold">{company.revenue} t·ª∑</div>
                    <div className="text-muted-foreground">Doanh thu</div>
                  </div>
                  <div className="text-center">
                    <div className="font-semibold">{company.profit} t·ª∑</div>
                    <div className="text-muted-foreground">L·ª£i nhu·∫≠n</div>
                  </div>
                  <div className="text-center">
                    <div className="font-semibold">{company.avgKPI}%</div>
                    <div className="text-muted-foreground">KPI</div>
                  </div>
                  <div className="text-center">
                    <div className="font-semibold">{company.employees}</div>
                    <div className="text-muted-foreground">Nh√¢n s·ª±</div>
                  </div>
                  <Button 
                    variant="outline" 
                    size="sm"
                    onClick={() => company.level === 'F2' ? setViewMode('f2-holding') : setViewMode('f3-companies')}
                  >
                    Xem chi ti·∫øt
                    <ArrowRight className="h-4 w-4 ml-2" />
                  </Button>
                </div>
              </div>
            ))}
          </div>
        </CardContent>
      </Card>

      {/* AI Insights */}
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center">
            <span className="mr-2">ü§ñ</span>
            AI Ph√¢n T√≠ch & G·ª£i √ù
          </CardTitle>
        </CardHeader>
        <CardContent>
          <div className="space-y-4">
            <div className="p-4 bg-blue-50 dark:bg-blue-950/20 rounded-lg border-l-4 border-blue-500">
              <h4 className="font-semibold text-blue-900 dark:text-blue-100">üìä AI T√≥m T·∫Øt H·ªá Sinh Th√°i F2-F3</h4>
              <p className="text-blue-800 dark:text-blue-200 mt-2">
                "T·ªïng doanh thu {allCompanies.length} c√¥ng ty th√†nh vi√™n ƒë·∫°t {totalMetrics.totalRevenue} t·ª∑ VNƒê. 
                F2 F&B Holding d·∫´n ƒë·∫ßu v·ªõi 210 t·ª∑. L·ª£i nhu·∫≠n h·ª£p nh·∫•t {totalMetrics.totalProfit} t·ª∑, 
                t·ª∑ su·∫•t l·ª£i nhu·∫≠n t·ªët. 
                T·ªïng nh√¢n l·ª±c {totalMetrics.totalEmployees.toLocaleString()} ng∆∞·ªùi v·ªõi KPI TB cao."
              </p>
            </div>
            
            <div className="p-4 bg-amber-50 dark:bg-amber-950/20 rounded-lg border-l-4 border-amber-500">
              <h4 className="font-semibold text-amber-900 dark:text-amber-100">‚ö†Ô∏è AI C·∫£nh B√°o Auto-Tiering</h4>
              <p className="text-amber-800 dark:text-amber-200 mt-2">
                "F2 F&B Holding ƒë·∫°t m·ª©c s·ªü h·ªØu BMC cao, s·∫µn s√†ng thƒÉng c·∫•p F1. 
                C·∫ßn chu·∫©n b·ªã workflow ph√™ duy·ªát v√† h·ªì s∆° ph√°p l√Ω. 
                F3 EduHolding v√† GAJ c·∫ßn tƒÉng c∆∞·ªùng h·ª£p t√°c ƒë·ªÉ ƒë·∫°t ng∆∞·ª°ng F2."
              </p>
            </div>

            <div className="p-4 bg-green-50 dark:bg-green-950/20 rounded-lg border-l-4 border-green-500">
              <h4 className="font-semibold text-green-900 dark:text-green-100">üí° AI G·ª£i √ù Chi·∫øn L∆∞·ª£c</h4>
              <p className="text-green-800 dark:text-green-200 mt-2">
                "üéØ TƒÉng v·ªën g√≥p BMC v√†o F3 GAJ t·ª´ 35% l√™n 55% ƒë·ªÉ thƒÉng F2. 
                üöÄ M·ªü r·ªông F2 F&B Holding v·ªõi 5 chi nh√°nh m·ªõi Q4. 
                üí∞ Ph√¢n b·ªï qu·ªπ ng√†nh 60 t·ª∑ ƒë·ªÉ h·ªó tr·ª£ startup F5 ti·ªÅm nƒÉng."
              </p>
            </div>
          </div>
        </CardContent>
      </Card>

      {/* Action Buttons F2-F3 */}
      <div className="flex justify-center space-x-4">
        <Button variant="default" onClick={() => setViewMode("f2-holding")}>
          <Building2 className="h-4 w-4 mr-2" />
          üè¨ F2 Holdings
        </Button>
        <Button variant="outline" onClick={() => setViewMode("f3-companies")}>
          <Briefcase className="h-4 w-4 mr-2" />
          üè¢ F3 Strategic
        </Button>
        <Button variant="outline" onClick={() => setViewMode("auto-tiering")}>
          <Zap className="h-4 w-4 mr-2" />
          üéØ Auto-Tiering
        </Button>
        <Button variant="outline" onClick={() => setViewMode("data-entry")}>
          <Database className="h-4 w-4 mr-2" />
          üìù Nh·∫≠p li·ªáu 9 PB
        </Button>
        <Button variant="outline" onClick={() => navigate('/consolidated-report')}>
          <Download className="h-4 w-4 mr-2" />
          üìä B√°o c√°o h·ª£p nh·∫•t
        </Button>
      </div>
    </div>
  );
}

// Detailed Company Dashboard Component
function CompanyDetailDashboard({ company, onBack }: { company: any; onBack: () => void }) {
  return (
    <div className="space-y-6">
      <div className="flex items-center justify-between">
        <div>
          <Button variant="outline" onClick={onBack} className="mb-4">
            ‚Üê Quay l·∫°i danh s√°ch
          </Button>
          <h1 className="text-3xl font-bold">{company.organizations?.name}</h1>
          <p className="text-muted-foreground">Chi ti·∫øt qu·∫£n tr·ªã c√¥ng ty th√†nh vi√™n</p>
        </div>
      </div>

      <Tabs defaultValue="overview" className="space-y-6">
        <TabsList className="grid w-full grid-cols-9">
          <TabsTrigger value="overview">T·ªïng quan</TabsTrigger>
          <TabsTrigger value="finance">T√†i ch√≠nh</TabsTrigger>
          <TabsTrigger value="hr">Nh√¢n s·ª±</TabsTrigger>
          <TabsTrigger value="sales">Kinh doanh</TabsTrigger>
          <TabsTrigger value="warehouse">Kho v·∫≠n</TabsTrigger>
          <TabsTrigger value="legal">Ph√°p ch·∫ø</TabsTrigger>
          <TabsTrigger value="tech">C√¥ng ngh·ªá</TabsTrigger>
          <TabsTrigger value="rd">R&D</TabsTrigger>
          <TabsTrigger value="investment">ƒê·∫ßu t∆∞</TabsTrigger>
        </TabsList>

        <TabsContent value="overview" className="space-y-6">
          {/* Company Overview Cards */}
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
            <Card>
              <CardHeader>
                <CardTitle className="text-sm">V·ªën G√≥p BMC</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="text-2xl font-bold">25 t·ª∑ VNƒê</div>
                <p className="text-xs text-muted-foreground">T·ª∑ l·ªá: 65%</p>
              </CardContent>
            </Card>
            <Card>
              <CardHeader>
                <CardTitle className="text-sm">Doanh Thu</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="text-2xl font-bold">45 t·ª∑ VNƒê</div>
                <p className="text-xs text-muted-foreground">+8% th√°ng tr∆∞·ªõc</p>
              </CardContent>
            </Card>
            <Card>
              <CardHeader>
                <CardTitle className="text-sm">L·ª£i Nhu·∫≠n</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="text-2xl font-bold">12 t·ª∑ VNƒê</div>
                <p className="text-xs text-muted-foreground">T·ª∑ su·∫•t: 26%</p>
              </CardContent>
            </Card>
            <Card>
              <CardHeader>
                <CardTitle className="text-sm">KPI C√¥ng Ty</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="text-2xl font-bold">85%</div>
                <p className="text-xs text-muted-foreground">Nh√¢n s·ª±: 120 ng∆∞·ªùi</p>
              </CardContent>
            </Card>
          </div>

          {/* Departments Overview */}
          <Card>
            <CardHeader>
              <CardTitle>T√¨nh H√¨nh Ph√≤ng Ban</CardTitle>
            </CardHeader>
            <CardContent>
              <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                {[
                  { name: "T√†i ch√≠nh", kpi: 94, staff: 5, status: "T·ªët" },
                  { name: "K·∫ø to√°n", kpi: 96, staff: 4, status: "Xu·∫•t s·∫Øc" },
                  { name: "Nh√¢n s·ª±", kpi: 96, staff: 4, status: "Xu·∫•t s·∫Øc" },
                  { name: "ƒê√†o t·∫°o", kpi: 92, staff: 3, status: "T·ªët" },
                  { name: "Kinh doanh", kpi: 95, staff: 25, status: "Xu·∫•t s·∫Øc" },
                  { name: "Marketing", kpi: 78, staff: 12, status: "C·∫ßn c·∫£i thi·ªán" },
                  { name: "S·∫£n xu·∫•t", kpi: 88, staff: 12, status: "T·ªët" },
                  { name: "Kho v·∫≠n", kpi: 91, staff: 8, status: "T·ªët" },
                  { name: "Ph√°p ch·∫ø", kpi: 90, staff: 4, status: "T·ªët" }
                ].map((dept, index) => (
                  <div key={index} className="p-4 border rounded-lg">
                    <div className="flex justify-between items-center mb-2">
                      <h4 className="font-semibold">{dept.name}</h4>
                      <Badge variant={dept.status === "Xu·∫•t s·∫Øc" ? "default" : dept.status === "T·ªët" ? "secondary" : "destructive"}>
                        {dept.status}
                      </Badge>
                    </div>
                    <div className="space-y-2">
                      <div className="flex justify-between text-sm">
                        <span>KPI:</span>
                        <span className="font-medium">{dept.kpi}%</span>
                      </div>
                      <div className="flex justify-between text-sm">
                        <span>Nh√¢n s·ª±:</span>
                        <span>{dept.staff} ng∆∞·ªùi</span>
                      </div>
                      <Progress value={dept.kpi} className="h-2" />
                    </div>
                  </div>
                ))}
              </div>
            </CardContent>
          </Card>
        </TabsContent>

        {/* Other tabs would have similar detailed content for each department */}
        <TabsContent value="finance">
          <Card>
            <CardHeader>
              <CardTitle>Chi Ti·∫øt T√†i Ch√≠nh</CardTitle>
            </CardHeader>
            <CardContent>
              <p className="text-muted-foreground">N·ªôi dung chi ti·∫øt v·ªÅ t√†i ch√≠nh c√¥ng ty...</p>
            </CardContent>
          </Card>
        </TabsContent>

        {/* Add other TabsContent for hr, sales, warehouse, legal, tech, rd, investment */}
      </Tabs>
    </div>
  );
}
