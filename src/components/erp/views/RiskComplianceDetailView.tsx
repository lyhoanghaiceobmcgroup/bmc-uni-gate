import React, { useState } from "react";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { Badge } from "@/components/ui/badge";
import { ArrowLeft, Shield, AlertTriangle, CheckCircle, Clock, FileText, Users, MessageSquare, Download, Upload } from "lucide-react";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";

interface RiskComplianceDetailViewProps {
  onBack: () => void;
  organizations: any[];
}

// Mock data cho Risk & Compliance
const mockRiskData = {
  totalRisks: 0,
  activeRisks: 0,
  resolvedRisks: 0,
  internalCompliance: 0,
  legalCompliance: 0,
  contractsExpiring: 0,
};

const mockRiskList = [];

const mockContractList = [];

const mockComplianceAreas = [];

export function RiskComplianceDetailView({ onBack, organizations }: RiskComplianceDetailViewProps) {
  const [activeTab, setActiveTab] = useState("overview");

  const getRiskLevelBadge = (level: string) => {
    switch (level) {
      case "Cao":
        return <Badge variant="destructive">Cao</Badge>;
      case "Trung b√¨nh":
        return <Badge variant="secondary" className="bg-yellow-100 text-yellow-800">Trung b√¨nh</Badge>;
      case "Th·∫•p":
        return <Badge variant="outline" className="bg-green-100 text-green-800">Th·∫•p</Badge>;
      default:
        return <Badge variant="outline">{level}</Badge>;
    }
  };

  const getStatusBadge = (status: string) => {
    switch (status) {
      case "Kh·∫Øc ph·ª•c xong":
        return <Badge variant="default" className="bg-green-100 text-green-800">Kh·∫Øc ph·ª•c xong</Badge>;
      case "ƒêang x·ª≠ l√Ω":
        return <Badge variant="secondary" className="bg-blue-100 text-blue-800">ƒêang x·ª≠ l√Ω</Badge>;
      case "M·ªõi ghi nh·∫≠n":
        return <Badge variant="destructive">M·ªõi ghi nh·∫≠n</Badge>;
      case "ƒêang gi√°m s√°t":
        return <Badge variant="outline">ƒêang gi√°m s√°t</Badge>;
      default:
        return <Badge variant="outline">{status}</Badge>;
    }
  };

  const getContractStatus = (status: string) => {
    switch (status) {
      case "C√≤n hi·ªáu l·ª±c":
        return <Badge variant="default" className="bg-green-100 text-green-800">C√≤n hi·ªáu l·ª±c</Badge>;
      case "S·∫Øp h·∫øt h·∫°n":
        return <Badge variant="destructive">S·∫Øp h·∫øt h·∫°n</Badge>;
      case "H·∫øt h·∫°n":
        return <Badge variant="secondary">H·∫øt h·∫°n</Badge>;
      default:
        return <Badge variant="outline">{status}</Badge>;
    }
  };

  const getComplianceStatus = (percentage: number) => {
    if (percentage >= 95) return { color: "text-green-600", bg: "bg-green-100", text: "Xu·∫•t s·∫Øc" };
    if (percentage >= 90) return { color: "text-blue-600", bg: "bg-blue-100", text: "T·ªët" };
    if (percentage >= 85) return { color: "text-yellow-600", bg: "bg-yellow-100", text: "Kh√° t·ªët" };
    return { color: "text-red-600", bg: "bg-red-100", text: "C·∫ßn c·∫£i thi·ªán" };
  };

  return (
    <div className="space-y-6">
      {/* Header */}
      <div className="flex items-center justify-between">
        <div className="flex items-center gap-4">
          <Button variant="outline" size="sm" onClick={onBack}>
            <ArrowLeft className="h-4 w-4 mr-2" />
            Quay l·∫°i
          </Button>
          <div>
            <h1 className="text-2xl font-semibold text-foreground">B√°o c√°o R·ªßi ro & Tu√¢n th·ªß</h1>
            <p className="text-muted-foreground">Gi√°m s√°t r·ªßi ro v√† tu√¢n th·ªß ph√°p ch·∫ø to√†n h·ªá th·ªëng</p>
          </div>
        </div>
        <div className="flex gap-2">
          <Button variant="outline" size="sm">
            <Upload className="h-4 w-4 mr-2" />
            Nh·∫≠p li·ªáu
          </Button>
          <Button variant="outline" size="sm">
            <Download className="h-4 w-4 mr-2" />
            Xu·∫•t b√°o c√°o
          </Button>
        </div>
      </div>

      {/* Filter Bar */}
      <div className="flex gap-4 p-4 bg-card rounded-lg border">
        <Select defaultValue="all">
          <SelectTrigger className="w-48">
            <SelectValue placeholder="Ch·ªçn t·ªï ch·ª©c" />
          </SelectTrigger>
          <SelectContent>
            <SelectItem value="all">T·∫•t c·∫£</SelectItem>
            <SelectItem value="bmc">BMC (T·∫≠p ƒëo√†n)</SelectItem>
            <SelectItem value="f1">F1 (C·ª•m ng√†nh)</SelectItem>
            <SelectItem value="f2">F2 (Ng√†nh)</SelectItem>
            <SelectItem value="f3">F3 (C√¥ng ty)</SelectItem>
          </SelectContent>
        </Select>
        <Select defaultValue="all">
          <SelectTrigger className="w-40">
            <SelectValue placeholder="Lo·∫°i r·ªßi ro" />
          </SelectTrigger>
          <SelectContent>
            <SelectItem value="all">T·∫•t c·∫£</SelectItem>
            <SelectItem value="financial">T√†i ch√≠nh</SelectItem>
            <SelectItem value="legal">Ph√°p l√Ω</SelectItem>
            <SelectItem value="hr">Nh√¢n s·ª±</SelectItem>
            <SelectItem value="tech">C√¥ng ngh·ªá</SelectItem>
          </SelectContent>
        </Select>
        <Select defaultValue="month">
          <SelectTrigger className="w-32">
            <SelectValue />
          </SelectTrigger>
          <SelectContent>
            <SelectItem value="day">Ng√†y</SelectItem>
            <SelectItem value="week">Tu·∫ßn</SelectItem>
            <SelectItem value="month">Th√°ng</SelectItem>
            <SelectItem value="quarter">Qu√Ω</SelectItem>
          </SelectContent>
        </Select>
      </div>

      {/* Overview Cards */}
      <div className="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-6 gap-4">
        <Card>
          <CardHeader className="pb-3">
            <CardTitle className="text-sm font-medium flex items-center gap-2">
              <AlertTriangle className="h-4 w-4 text-amber-500" />
              T·ªïng s·ªë r·ªßi ro
            </CardTitle>
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold text-foreground">{mockRiskData.totalRisks}</div>
            <p className="text-xs text-muted-foreground mt-1">
              ƒê√£ ghi nh·∫≠n
            </p>
          </CardContent>
        </Card>

        <Card>
          <CardHeader className="pb-3">
            <CardTitle className="text-sm font-medium flex items-center gap-2">
              <Clock className="h-4 w-4 text-blue-500" />
              ƒêang x·ª≠ l√Ω
            </CardTitle>
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold text-foreground">{mockRiskData.activeRisks}</div>
            <p className="text-xs text-muted-foreground mt-1">
              {((mockRiskData.activeRisks / mockRiskData.totalRisks) * 100).toFixed(1)}% t·ªïng s·ªë
            </p>
          </CardContent>
        </Card>

        <Card>
          <CardHeader className="pb-3">
            <CardTitle className="text-sm font-medium flex items-center gap-2">
              <CheckCircle className="h-4 w-4 text-green-500" />
              ƒê√£ kh·∫Øc ph·ª•c
            </CardTitle>
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold text-foreground">{mockRiskData.resolvedRisks}</div>
            <p className="text-xs text-muted-foreground mt-1">
              {((mockRiskData.resolvedRisks / mockRiskData.totalRisks) * 100).toFixed(1)}% t·ªïng s·ªë
            </p>
          </CardContent>
        </Card>

        <Card>
          <CardHeader className="pb-3">
            <CardTitle className="text-sm font-medium flex items-center gap-2">
              <Shield className="h-4 w-4 text-primary" />
              Tu√¢n th·ªß n·ªôi b·ªô
            </CardTitle>
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold text-foreground">{mockRiskData.internalCompliance}%</div>
            <p className="text-xs text-muted-foreground mt-1">
              T·ª∑ l·ªá tu√¢n th·ªß quy ƒë·ªãnh n·ªôi b·ªô
            </p>
          </CardContent>
        </Card>

        <Card>
          <CardHeader className="pb-3">
            <CardTitle className="text-sm font-medium flex items-center gap-2">
              <FileText className="h-4 w-4 text-purple-500" />
              Tu√¢n th·ªß ph√°p lu·∫≠t
            </CardTitle>
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold text-foreground">{mockRiskData.legalCompliance}%</div>
            <p className="text-xs text-muted-foreground mt-1">
              Cao h∆°n m·ª©c t·ªëi thi·ªÉu 85%
            </p>
          </CardContent>
        </Card>

        <Card>
          <CardHeader className="pb-3">
            <CardTitle className="text-sm font-medium flex items-center gap-2">
              <Clock className="h-4 w-4 text-orange-500" />
              Hƒê s·∫Øp h·∫øt h·∫°n
            </CardTitle>
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold text-foreground">{mockRiskData.contractsExpiring}</div>
            <p className="text-xs text-muted-foreground mt-1">
              H·ª£p ƒë·ªìng c·∫ßn gia h·∫°n
            </p>
          </CardContent>
        </Card>
      </div>

      {/* AI Insight Box */}
      <Card className="border-l-4 border-l-primary">
        <CardHeader>
          <CardTitle className="text-lg flex items-center gap-2">
            <MessageSquare className="h-5 w-5 text-primary" />
            AI Risk & Compliance Insight
          </CardTitle>
        </CardHeader>
        <CardContent className="space-y-3">
          <div>
            <h4 className="font-medium text-sm text-foreground mb-1">üìä T√≥m t·∫Øt:</h4>
            <p className="text-sm text-muted-foreground">
              Trong {mockRiskData.totalRisks} r·ªßi ro ƒë√£ ghi nh·∫≠n, c√≥ {mockRiskData.activeRisks} v·ª• ƒëang x·ª≠ l√Ω, chi·∫øm {((mockRiskData.activeRisks / mockRiskData.totalRisks) * 100).toFixed(1)}%. 
              C√°c r·ªßi ro ph√°p l√Ω t·∫°i C√¥ng ty A c·∫ßn ƒë∆∞·ª£c ∆∞u ti√™n v√¨ m·ª©c ƒë·ªô cao.
            </p>
          </div>
          <div>
            <h4 className="font-medium text-sm text-amber-600 mb-1">‚ö†Ô∏è C·∫£nh b√°o:</h4>
            <p className="text-sm text-muted-foreground">
              T·ª∑ l·ªá tu√¢n th·ªß c·ªßa Startup X ch·ªâ ƒë·∫°t 75%, d∆∞·ªõi chu·∫©n an to√†n (85%). C·∫ßn c√≥ bi·ªán ph√°p kh·∫Øc ph·ª•c ngay.
            </p>
          </div>
          <div>
            <h4 className="font-medium text-sm text-green-600 mb-1">üí° G·ª£i √Ω h√†nh ƒë·ªông:</h4>
            <p className="text-sm text-muted-foreground">
              Gia h·∫°n s·ªõm {mockRiskData.contractsExpiring} h·ª£p ƒë·ªìng s·∫Øp h·∫øt h·∫°n ƒë·ªÉ tr√°nh r·ªßi ro ph√°p l√Ω. TƒÉng c∆∞·ªùng ki·ªÉm tra tu√¢n th·ªß t·∫°i c√°c startup.
            </p>
          </div>
        </CardContent>
      </Card>

      {/* Detailed Content */}
      <Tabs value={activeTab} onValueChange={setActiveTab} className="space-y-4">
        <TabsList>
          <TabsTrigger value="overview">T·ªïng quan</TabsTrigger>
          <TabsTrigger value="risks">R·ªßi ro</TabsTrigger>
          <TabsTrigger value="contracts">H·ª£p ƒë·ªìng</TabsTrigger>
          <TabsTrigger value="compliance">Tu√¢n th·ªß</TabsTrigger>
        </TabsList>

        <TabsContent value="overview" className="space-y-4">
          <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
            <Card>
              <CardHeader>
                <CardTitle>Ph√¢n b·ªï r·ªßi ro theo lo·∫°i</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="space-y-3">
                  <div className="flex items-center justify-between">
                    <div className="flex items-center gap-3">
                      <div className="w-3 h-3 rounded-full bg-red-500" />
                      <span className="font-medium text-sm">Ph√°p l√Ω</span>
                    </div>
                    <div className="text-right">
                      <div className="font-semibold text-sm">35 v·ª•</div>
                      <div className="text-xs text-muted-foreground">29%</div>
                    </div>
                  </div>
                  <div className="flex items-center justify-between">
                    <div className="flex items-center gap-3">
                      <div className="w-3 h-3 rounded-full bg-blue-500" />
                      <span className="font-medium text-sm">T√†i ch√≠nh</span>
                    </div>
                    <div className="text-right">
                      <div className="font-semibold text-sm">30 v·ª•</div>
                      <div className="text-xs text-muted-foreground">25%</div>
                    </div>
                  </div>
                  <div className="flex items-center justify-between">
                    <div className="flex items-center gap-3">
                      <div className="w-3 h-3 rounded-full bg-green-500" />
                      <span className="font-medium text-sm">Nh√¢n s·ª±</span>
                    </div>
                    <div className="text-right">
                      <div className="font-semibold text-sm">25 v·ª•</div>
                      <div className="text-xs text-muted-foreground">21%</div>
                    </div>
                  </div>
                  <div className="flex items-center justify-between">
                    <div className="flex items-center gap-3">
                      <div className="w-3 h-3 rounded-full bg-purple-500" />
                      <span className="font-medium text-sm">C√¥ng ngh·ªá</span>
                    </div>
                    <div className="text-right">
                      <div className="font-semibold text-sm">20 v·ª•</div>
                      <div className="text-xs text-muted-foreground">17%</div>
                    </div>
                  </div>
                </div>
              </CardContent>
            </Card>

            <Card>
              <CardHeader>
                <CardTitle>T√¨nh tr·∫°ng h·ª£p ƒë·ªìng</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="space-y-4">
                  <div className="flex items-center justify-between">
                    <span className="text-sm">C√≤n hi·ªáu l·ª±c</span>
                    <div className="flex items-center gap-2">
                      <div className="w-20 bg-muted rounded-full h-2">
                        <div className="bg-green-500 h-2 rounded-full" style={{ width: '60%' }}></div>
                      </div>
                      <span className="text-sm font-medium">150</span>
                    </div>
                  </div>
                  <div className="flex items-center justify-between">
                    <span className="text-sm">S·∫Øp h·∫øt h·∫°n (&lt; 30 ng√†y)</span>
                    <div className="flex items-center gap-2">
                      <div className="w-20 bg-muted rounded-full h-2">
                        <div className="bg-yellow-500 h-2 rounded-full" style={{ width: '20%' }}></div>
                      </div>
                      <span className="text-sm font-medium">25</span>
                    </div>
                  </div>
                  <div className="flex items-center justify-between">
                    <span className="text-sm">ƒê√£ h·∫øt h·∫°n</span>
                    <div className="flex items-center gap-2">
                      <div className="w-20 bg-muted rounded-full h-2">
                        <div className="bg-red-500 h-2 rounded-full" style={{ width: '10%' }}></div>
                      </div>
                      <span className="text-sm font-medium">12</span>
                    </div>
                  </div>
                </div>
              </CardContent>
            </Card>
          </div>
        </TabsContent>

        <TabsContent value="risks" className="space-y-4">
          <Card>
            <CardHeader>
              <CardTitle>Danh s√°ch r·ªßi ro chi ti·∫øt</CardTitle>
            </CardHeader>
            <CardContent>
              <div className="space-y-4">
                {mockRiskList.map((risk, index) => (
                  <div key={index} className="p-4 border rounded-lg hover:bg-muted/50">
                    <div className="flex items-start justify-between mb-2">
                      <div>
                        <h4 className="font-medium text-sm">{risk.unit}</h4>
                        <p className="text-xs text-muted-foreground">{risk.description}</p>
                      </div>
                      <div className="flex gap-2">
                        {getRiskLevelBadge(risk.level)}
                        {getStatusBadge(risk.status)}
                      </div>
                    </div>
                    <div className="grid grid-cols-2 md:grid-cols-4 gap-4 mt-3">
                      <div>
                        <p className="text-xs text-muted-foreground">Lo·∫°i r·ªßi ro</p>
                        <p className="text-sm font-medium">{risk.type}</p>
                      </div>
                      <div>
                        <p className="text-xs text-muted-foreground">Tu√¢n th·ªß</p>
                        <p className="text-sm font-medium">{risk.compliance}%</p>
                      </div>
                      <div>
                        <p className="text-xs text-muted-foreground">H·ª£p ƒë·ªìng</p>
                        <p className="text-sm font-medium">{risk.contract}</p>
                      </div>
                      <div>
                        <p className="text-xs text-muted-foreground">Ng∆∞·ªùi ph·ª• tr√°ch</p>
                        <p className="text-sm font-medium">{risk.assignee}</p>
                      </div>
                    </div>
                  </div>
                ))}
              </div>
            </CardContent>
          </Card>
        </TabsContent>

        <TabsContent value="contracts" className="space-y-4">
          <Card>
            <CardHeader>
              <CardTitle>Danh s√°ch h·ª£p ƒë·ªìng</CardTitle>
            </CardHeader>
            <CardContent>
              <div className="overflow-x-auto">
                <table className="w-full text-sm">
                  <thead>
                    <tr className="border-b">
                      <th className="text-left p-2">M√£ Hƒê</th>
                      <th className="text-left p-2">ƒê·ªëi t√°c</th>
                      <th className="text-left p-2">Lo·∫°i h·ª£p ƒë·ªìng</th>
                      <th className="text-right p-2">Ng√†y b·∫Øt ƒë·∫ßu</th>
                      <th className="text-right p-2">Ng√†y h·∫øt h·∫°n</th>
                      <th className="text-right p-2">Gi√° tr·ªã</th>
                      <th className="text-center p-2">Tr·∫°ng th√°i</th>
                      <th className="text-right p-2">C√≤n l·∫°i</th>
                    </tr>
                  </thead>
                  <tbody>
                    {mockContractList.map((contract, index) => (
                      <tr key={index} className="border-b hover:bg-muted/50">
                        <td className="p-2 font-medium">{contract.id}</td>
                        <td className="p-2">{contract.partner}</td>
                        <td className="p-2">{contract.type}</td>
                        <td className="p-2 text-right">{contract.startDate}</td>
                        <td className="p-2 text-right">{contract.endDate}</td>
                        <td className="p-2 text-right font-semibold">{contract.value}</td>
                        <td className="p-2 text-center">{getContractStatus(contract.status)}</td>
                        <td className="p-2 text-right">{contract.daysLeft} ng√†y</td>
                      </tr>
                    ))}
                  </tbody>
                </table>
              </div>
            </CardContent>
          </Card>
        </TabsContent>

        <TabsContent value="compliance" className="space-y-4">
          <Card>
            <CardHeader>
              <CardTitle>T√¨nh h√¨nh tu√¢n th·ªß theo lƒ©nh v·ª±c</CardTitle>
            </CardHeader>
            <CardContent>
              <div className="space-y-4">
                {mockComplianceAreas.map((area, index) => {
                  const status = getComplianceStatus(area.percentage);
                  return (
                    <div key={index} className="flex items-center justify-between p-3 rounded-lg border">
                      <div className="flex-1">
                        <div className="flex items-center justify-between mb-2">
                          <h4 className="font-medium text-sm">{area.area}</h4>
                          <div className="flex items-center gap-2">
                            <span className={`text-xs px-2 py-1 rounded ${status.bg} ${status.color}`}>
                              {status.text}
                            </span>
                            <span className="font-semibold text-sm">{area.percentage}%</span>
                          </div>
                        </div>
                        <div className="w-full bg-muted rounded-full h-2">
                          <div 
                            className="h-2 rounded-full bg-primary" 
                            style={{ width: `${area.percentage}%` }}
                          ></div>
                        </div>
                        <p className="text-xs text-muted-foreground mt-1">
                          {area.issues} v·∫•n ƒë·ªÅ c·∫ßn x·ª≠ l√Ω
                        </p>
                      </div>
                    </div>
                  );
                })}
              </div>
            </CardContent>
          </Card>
        </TabsContent>
      </Tabs>
    </div>
  );
}