import React, { useState, useEffect } from "react";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { Badge } from "@/components/ui/badge";
import { Progress } from "@/components/ui/progress";
import { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger } from "@/components/ui/dialog";
import { 
  Settings, 
  Users, 
  Shield, 
  Server, 
  FileCheck, 
  BarChart3, 
  AlertTriangle, 
  CheckCircle, 
  XCircle, 
  Clock, 
  Key, 
  Lock,
  Database,
  Wifi,
  MessageSquare,
  Plus,
  Edit,
  Trash2,
  Download,
  Search,
  Filter,
  Building2
} from "lucide-react";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { Input } from "@/components/ui/input";
import { useAuth } from "@/contexts/AuthContext";
import { supabase } from "@/integrations/supabase/client";


interface SystemViewProps {
  organizations?: any[];
}

// Mock data for system administration
const mockSystemData = {
  totalUsers: 1247,
  activeUsers: 1156,
  pendingUsers: 15,
  blockedUsers: 76,
  totalRoles: 28,
  systemUptime: 99.97,
  securityIncidents: 3,
  apiCalls: 2547892,
  complianceScore: 94
};

const mockUsers = [
  {
    id: "1",
    email: "ceo@bmc.vn",
    fullName: "L√Ω Ho√†ng H·∫£i",
    role: "CEO",
    level: "BMC",
    status: "active",
    lastLogin: "2024-12-30 09:15",
    permissions: ["full_admin", "financial_view", "strategic_planning"]
  },
  {
    id: "2", 
    email: "manager.f1@bmc.vn",
    fullName: "Nguy·ªÖn VƒÉn An",
    role: "Cluster Manager",
    level: "F1",
    status: "active",
    lastLogin: "2024-12-30 08:45",
    permissions: ["cluster_admin", "department_view", "reporting"]
  },
  {
    id: "3",
    email: "staff.f4@bmc.vn", 
    fullName: "Tr·∫ßn Th·ªã Minh",
    role: "Branch Staff",
    level: "F4",
    status: "pending",
    lastLogin: "2024-12-29 17:30",
    permissions: ["data_entry", "local_view"]
  }
];

const mockSecurityEvents = [
  {
    id: "1",
    type: "login_failure",
    severity: "medium",
    message: "5 l·∫ßn ƒëƒÉng nh·∫≠p th·∫•t b·∫°i t·ª´ IP 192.168.1.100",
    timestamp: "2024-12-30 09:30",
    user: "unknown",
    action: "blocked_ip"
  },
  {
    id: "2",
    type: "permission_violation", 
    severity: "high",
    message: "User c·ªë g·∫Øng truy c·∫≠p d·ªØ li·ªáu t√†i ch√≠nh ngo√†i quy·ªÅn h·∫°n",
    timestamp: "2024-12-30 08:15",
    user: "staff.f4@bmc.vn",
    action: "alert_admin"
  },
  {
    id: "3",
    type: "data_export",
    severity: "low", 
    message: "Xu·∫•t b√°o c√°o F1 C·ª•m ng√†nh th√†nh c√¥ng",
    timestamp: "2024-12-30 07:45",
    user: "manager.f1@bmc.vn",
    action: "logged"
  }
];

export function SystemView({ organizations }: SystemViewProps) {
  const [activeTab, setActiveTab] = useState("users");
  const [searchTerm, setSearchTerm] = useState("");
  const [selectedLevel, setSelectedLevel] = useState("all");
  const [users, setUsers] = useState(mockUsers);
  const [systemStats, setSystemStats] = useState(mockSystemData);

  const { user } = useAuth();

  // Load real users from Supabase
  useEffect(() => {
    loadSystemUsers();
    loadSystemStats();
  }, []);

  const loadSystemUsers = async () => {
    try {
      // First get all user organization roles with related data
      const { data: userRoles, error: rolesError } = await supabase
        .from('user_organization_roles')
        .select(`
          *,
          profiles!user_organization_roles_user_id_fkey (*),
          organizations (*)
        `);
      
      if (rolesError) {
        console.error('Error loading user roles:', rolesError);
        // Fallback to mock data if database query fails
        setUsers(mockUsers);
        return;
      }

      // Transform data to match our mock structure
      const transformedUsers = userRoles?.map(userRole => ({
        id: userRole.profiles?.id || userRole.user_id,
        email: userRole.profiles?.email || 'N/A',
        fullName: userRole.profiles?.full_name || 'N/A',
        role: userRole.role || 'user',
        level: userRole.organizations?.level || 'N/A',
        status: 'active',
        lastLogin: new Date().toLocaleString('vi-VN'),
        permissions: ['view_basic']
      })) || [];

      setUsers(transformedUsers);
    } catch (error) {
      console.error('Failed to load users:', error);
      // Fallback to mock data if database query fails
      setUsers(mockUsers);
    }
  };

  const loadSystemStats = async () => {
    // In real implementation, this would fetch from monitoring APIs
    // For now using mock data
  };

  const filteredUsers = users.filter(user => {
    const matchesSearch = user.fullName.toLowerCase().includes(searchTerm.toLowerCase()) ||
                         user.email.toLowerCase().includes(searchTerm.toLowerCase());
    const matchesLevel = selectedLevel === "all" || user.level === selectedLevel;
    return matchesSearch && matchesLevel;
  });

  const getStatusBadge = (status: string) => {
    switch (status) {
      case "active":
        return <Badge className="bg-green-100 text-green-800">Ho·∫°t ƒë·ªông</Badge>;
      case "pending":
        return <Badge className="bg-yellow-100 text-yellow-800">Ch·ªù duy·ªát</Badge>;
      case "blocked":
        return <Badge variant="destructive">B·ªã kh√≥a</Badge>;
      default:
        return <Badge variant="outline">{status}</Badge>;
    }
  };

  const getSeverityBadge = (severity: string) => {
    switch (severity) {
      case "high":
        return <Badge variant="destructive">Cao</Badge>;
      case "medium":
        return <Badge className="bg-yellow-100 text-yellow-800">Trung b√¨nh</Badge>;
      case "low":
        return <Badge className="bg-green-100 text-green-800">Th·∫•p</Badge>;
      default:
        return <Badge variant="outline">{severity}</Badge>;
    }
  };

  return (
    <div className="space-y-6">
      {/* Header */}
      <div className="flex items-center justify-between">
        <div>
          <h1 className="text-3xl font-bold flex items-center gap-2">
            <Settings className="h-8 w-8 text-primary" />
            ‚öôÔ∏è Qu·∫£n Tr·ªã H·ªá Th·ªëng
          </h1>
          <p className="text-muted-foreground mt-2">
            Trung t√¢m qu·∫£n tr·ªã ERP-AI: T√†i kho·∫£n, Ph√¢n quy·ªÅn, B·∫£o m·∫≠t & H·∫° t·∫ßng
          </p>
        </div>
        <div className="flex gap-2">
          <Button variant="outline" size="sm">
            <Download className="h-4 w-4 mr-2" />
            Xu·∫•t audit log
          </Button>

          <Button className="bg-gradient-primary">
            ü§ñ AI Security
          </Button>
        </div>
      </div>

      {/* System Overview Cards */}
      <div className="grid grid-cols-2 md:grid-cols-4 lg:grid-cols-9 gap-4">
        <Card className="border-l-4 border-l-blue-500">
          <CardHeader className="pb-2">
            <CardTitle className="text-sm font-medium flex items-center gap-2">
              <Users className="h-4 w-4" />
              T·ªïng ng∆∞·ªùi d√πng
            </CardTitle>
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold">{systemStats.totalUsers}</div>
            <p className="text-xs text-muted-foreground">To√†n h·ªá sinh th√°i</p>
          </CardContent>
        </Card>

        <Card className="border-l-4 border-l-green-500">
          <CardHeader className="pb-2">
            <CardTitle className="text-sm font-medium flex items-center gap-2">
              <CheckCircle className="h-4 w-4" />
              ƒêang ho·∫°t ƒë·ªông
            </CardTitle>
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold text-green-600">{systemStats.activeUsers}</div>
            <p className="text-xs text-green-600">Online users</p>
          </CardContent>
        </Card>

        <Card className="border-l-4 border-l-yellow-500">
          <CardHeader className="pb-2">
            <CardTitle className="text-sm font-medium flex items-center gap-2">
              <Clock className="h-4 w-4" />
              Ch·ªù duy·ªát
            </CardTitle>
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold text-yellow-600">{systemStats.pendingUsers}</div>
            <p className="text-xs text-muted-foreground">Pending approval</p>
          </CardContent>
        </Card>

        <Card className="border-l-4 border-l-red-500">
          <CardHeader className="pb-2">
            <CardTitle className="text-sm font-medium flex items-center gap-2">
              <XCircle className="h-4 w-4" />
              B·ªã kh√≥a
            </CardTitle>
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold text-red-600">{systemStats.blockedUsers}</div>
            <p className="text-xs text-red-600">Blocked users</p>
          </CardContent>
        </Card>

        <Card className="border-l-4 border-l-purple-500">
          <CardHeader className="pb-2">
            <CardTitle className="text-sm font-medium flex items-center gap-2">
              <Key className="h-4 w-4" />
              Vai tr√≤
            </CardTitle>
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold">{systemStats.totalRoles}</div>
            <p className="text-xs text-muted-foreground">Role ƒë·ªãnh nghƒ©a</p>
          </CardContent>
        </Card>

        <Card className="border-l-4 border-l-cyan-500">
          <CardHeader className="pb-2">
            <CardTitle className="text-sm font-medium flex items-center gap-2">
              <Server className="h-4 w-4" />
              Uptime
            </CardTitle>
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold text-green-600">{systemStats.systemUptime}%</div>
            <p className="text-xs text-green-600">H·ªá th·ªëng ·ªïn ƒë·ªãnh</p>
          </CardContent>
        </Card>

        <Card className="border-l-4 border-l-amber-500">
          <CardHeader className="pb-2">
            <CardTitle className="text-sm font-medium flex items-center gap-2">
              <Shield className="h-4 w-4" />
              B·∫£o m·∫≠t
            </CardTitle>
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold text-amber-600">{systemStats.securityIncidents}</div>
            <p className="text-xs text-muted-foreground">S·ª± c·ªë tu·∫ßn n√†y</p>
          </CardContent>
        </Card>

        <Card className="border-l-4 border-l-indigo-500">
          <CardHeader className="pb-2">
            <CardTitle className="text-sm font-medium flex items-center gap-2">
              <Wifi className="h-4 w-4" />
              API Calls
            </CardTitle>
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold">{(systemStats.apiCalls / 1000000).toFixed(1)}M</div>
            <p className="text-xs text-muted-foreground">H√¥m nay</p>
          </CardContent>
        </Card>

        <Card className="border-l-4 border-l-pink-500">
          <CardHeader className="pb-2">
            <CardTitle className="text-sm font-medium flex items-center gap-2">
              <FileCheck className="h-4 w-4" />
              Tu√¢n th·ªß
            </CardTitle>
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold text-green-600">{systemStats.complianceScore}%</div>
            <p className="text-xs text-green-600">Compliance score</p>
          </CardContent>
        </Card>
      </div>

      {/* AI System Intelligence */}
      <Card className="border-l-4 border-l-gradient-primary bg-gradient-subtle">
        <CardHeader>
          <CardTitle className="text-lg flex items-center gap-2">
            <MessageSquare className="h-5 w-5 text-primary" />
            ü§ñ AI System Intelligence - Security & Infrastructure
          </CardTitle>
        </CardHeader>
        <CardContent className="space-y-4">
          <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
            <div className="space-y-2">
              <h4 className="font-medium text-sm text-foreground">üõ°Ô∏è AI Security Agent:</h4>
              <p className="text-sm text-muted-foreground">
                Ph√°t hi·ªán 3 s·ª± c·ªë b·∫£o m·∫≠t tu·∫ßn n√†y. H·ªá th·ªëng uptime 99.97%. 
                G·ª£i √Ω k√≠ch ho·∫°t 2FA b·∫Øt bu·ªôc cho t√†i kho·∫£n F1/F2.
              </p>
            </div>
            <div className="space-y-2">
              <h4 className="font-medium text-sm text-amber-600">‚ö†Ô∏è AI Compliance Agent:</h4>
              <p className="text-sm text-muted-foreground">
                Tu√¢n th·ªß GDPR: 94%. C·∫ßn audit logs cho 15 t√†i kho·∫£n pending. 
                Nh·∫Øc nh·ªü: ch·ª©ng nh·∫≠n ISO 27001 h·∫øt h·∫°n trong 3 th√°ng.
              </p>
            </div>
            <div className="space-y-2">
              <h4 className="font-medium text-sm text-green-600">‚ö° AI Infra Agent:</h4>
              <p className="text-sm text-muted-foreground">
                Server CPU: 68%, RAM: 74%. API response time: 120ms avg. 
                G·ª£i √Ω scale database cho 2.5M API calls/ng√†y.
              </p>
            </div>
          </div>
        </CardContent>
      </Card>

      {/* Main Content Tabs */}
      <Tabs value={activeTab} onValueChange={setActiveTab} className="space-y-4">
        <TabsList className="grid grid-cols-6 w-full">
          <TabsTrigger value="users">üë§ T√†i kho·∫£n</TabsTrigger>
          <TabsTrigger value="permissions">üîë Ph√¢n quy·ªÅn</TabsTrigger>
          <TabsTrigger value="security">üîí B·∫£o m·∫≠t</TabsTrigger>
          <TabsTrigger value="infrastructure">‚öôÔ∏è H·∫° t·∫ßng</TabsTrigger>
          <TabsTrigger value="compliance">üìë Tu√¢n th·ªß</TabsTrigger>
          <TabsTrigger value="reports">üìä B√°o c√°o</TabsTrigger>
        </TabsList>

        <TabsContent value="users" className="space-y-4">
          {/* User Management Header */}
          <div className="flex items-center justify-between">
            <h3 className="text-xl font-semibold">üë§ Qu·∫£n l√Ω T√†i kho·∫£n</h3>
            <div className="flex gap-2">
              <Button size="sm">
                <Plus className="h-4 w-4 mr-2" />
                Th√™m ng∆∞·ªùi d√πng
              </Button>
            </div>
          </div>

          {/* Filters */}
          <div className="flex gap-4 p-4 bg-card rounded-lg border">
            <div className="flex-1">
              <Input
                placeholder="üîç T√¨m ki·∫øm theo t√™n ho·∫∑c email..."
                value={searchTerm}
                onChange={(e) => setSearchTerm(e.target.value)}
                className="w-full"
              />
            </div>
            <Select value={selectedLevel} onValueChange={setSelectedLevel}>
              <SelectTrigger className="w-48">
                <SelectValue placeholder="Ch·ªçn c·∫•p ƒë·ªô" />
              </SelectTrigger>
              <SelectContent>
                <SelectItem value="all">T·∫•t c·∫£ c·∫•p ƒë·ªô</SelectItem>
                <SelectItem value="BMC">üåê BMC Holdings</SelectItem>
                <SelectItem value="F1">üè¢ F1 - C·ª•m ng√†nh</SelectItem>
                <SelectItem value="F2">üè¨ F2 - C√¥ng ty ng√†nh</SelectItem>
                <SelectItem value="F3">üè™ F3 - C√¥ng ty chi·∫øn l∆∞·ª£c</SelectItem>
                <SelectItem value="F4">üè™ F4 - Chi nh√°nh</SelectItem>
                <SelectItem value="F5">üöÄ F5 - Startup</SelectItem>
              </SelectContent>
            </Select>
          </div>

          {/* Users List */}
          <div className="grid gap-4">
            {filteredUsers.map((user) => (
              <Card key={user.id} className="hover:shadow-md transition-shadow">
                <CardContent className="p-4">
                  <div className="flex items-center justify-between">
                    <div className="flex items-center gap-4">
                      <div className="h-10 w-10 rounded-full bg-primary/10 flex items-center justify-center">
                        <span className="text-sm font-medium">
                          {user.fullName?.charAt(0).toUpperCase()}
                        </span>
                      </div>
                      <div>
                        <h4 className="font-medium">{user.fullName}</h4>
                        <p className="text-sm text-muted-foreground">{user.email}</p>
                        <div className="flex items-center gap-2 mt-1">
                          <Badge variant="outline">{user.level}</Badge>
                          <Badge variant="secondary">{user.role}</Badge>
                        </div>
                      </div>
                    </div>
                    <div className="flex items-center gap-3">
                      <div className="text-right">
                        <p className="text-sm text-muted-foreground">L·∫ßn cu·ªëi:</p>
                        <p className="text-xs">{user.lastLogin}</p>
                      </div>
                      {getStatusBadge(user.status)}
                      <div className="flex gap-1">
                        <Button size="sm" variant="outline">
                          <Edit className="h-3 w-3" />
                        </Button>
                        <Button size="sm" variant="outline">
                          <Key className="h-3 w-3" />
                        </Button>
                        <Button size="sm" variant="outline">
                          <Lock className="h-3 w-3" />
                        </Button>
                      </div>
                    </div>
                  </div>
                </CardContent>
              </Card>
            ))}
          </div>
        </TabsContent>

        <TabsContent value="permissions" className="space-y-4">
          <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
            <Card>
              <CardHeader>
                <CardTitle>üîë RBAC - Role Based Access Control</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="space-y-4">
                  <div className="flex items-center justify-between p-3 bg-muted rounded-lg">
                    <div>
                      <p className="font-medium">CEO</p>
                      <p className="text-xs text-muted-foreground">To√†n quy·ªÅn h·ªá th·ªëng</p>
                    </div>
                    <Badge className="bg-red-100 text-red-800">Full Admin</Badge>
                  </div>
                  
                  <div className="flex items-center justify-between p-3 bg-muted rounded-lg">
                    <div>
                      <p className="font-medium">Cluster Manager</p>
                      <p className="text-xs text-muted-foreground">Qu·∫£n l√Ω c·ª•m ng√†nh F1</p>
                    </div>
                    <Badge className="bg-blue-100 text-blue-800">Cluster Admin</Badge>
                  </div>

                  <div className="flex items-center justify-between p-3 bg-muted rounded-lg">
                    <div>
                      <p className="font-medium">Branch Manager</p>
                      <p className="text-xs text-muted-foreground">Qu·∫£n l√Ω chi nh√°nh F4</p>
                    </div>
                    <Badge className="bg-green-100 text-green-800">Branch Admin</Badge>
                  </div>

                  <div className="flex items-center justify-between p-3 bg-muted rounded-lg">
                    <div>
                      <p className="font-medium">Staff</p>
                      <p className="text-xs text-muted-foreground">Nh√¢n vi√™n v·∫≠n h√†nh</p>
                    </div>
                    <Badge className="bg-gray-100 text-gray-800">View Only</Badge>
                  </div>
                </div>
              </CardContent>
            </Card>

            <Card>
              <CardHeader>
                <CardTitle>üéØ ABAC - Attribute Based Access Control</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="space-y-4">
                  <div>
                    <h4 className="font-medium mb-2">Ph√¢n quy·ªÅn theo thu·ªôc t√≠nh:</h4>
                    <div className="space-y-2 text-sm">
                      <div className="flex justify-between">
                        <span>üìç V·ªã tr√≠ ƒë·ªãa l√Ω:</span>
                        <span className="font-medium">H√† N·ªôi, HCM, ƒê√† N·∫µng</span>
                      </div>
                      <div className="flex justify-between">
                        <span>üè¢ T·ªï ch·ª©c:</span>
                        <span className="font-medium">BMC ‚Üí F1 ‚Üí F2 ‚Üí F3 ‚Üí F4 ‚Üí F5</span>
                      </div>
                      <div className="flex justify-between">
                        <span>üìÇ Ph√≤ng ban:</span>
                        <span className="font-medium">9 ph√≤ng ban ch·ª©c nƒÉng</span>
                      </div>
                      <div className="flex justify-between">
                        <span>‚è∞ Th·ªùi gian:</span>
                        <span className="font-medium">7:00 - 18:00 (gi·ªù h√†nh ch√≠nh)</span>
                      </div>
                    </div>
                  </div>

                  <div className="p-3 bg-blue-50 rounded-lg">
                    <p className="text-sm font-medium text-blue-800">üí° V√≠ d·ª• ABAC:</p>
                    <p className="text-xs text-blue-600">
                      Nh√¢n vi√™n k·∫ø to√°n Chi nh√°nh HN ch·ªâ ƒë∆∞·ª£c xem d·ªØ li·ªáu t√†i ch√≠nh HN 
                      trong gi·ªù h√†nh ch√≠nh, kh√¥ng ƒë∆∞·ª£c xu·∫•t file.
                    </p>
                  </div>
                </div>
              </CardContent>
            </Card>
          </div>
        </TabsContent>

        <TabsContent value="security" className="space-y-4">
          <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
            <Card>
              <CardHeader>
                <CardTitle>üîí T√¨nh h√¨nh B·∫£o m·∫≠t</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="space-y-4">
                  <div>
                    <div className="flex justify-between text-sm mb-1">
                      <span>M√£ h√≥a d·ªØ li·ªáu (AES-256)</span>
                      <span className="text-green-600">‚úì Ho·∫°t ƒë·ªông</span>
                    </div>
                    <Progress value={100} className="h-2 bg-green-100" />
                  </div>
                  
                  <div>
                    <div className="flex justify-between text-sm mb-1">
                      <span>TLS/SSL truy·ªÅn t·∫£i</span>
                      <span className="text-green-600">‚úì Ho·∫°t ƒë·ªông</span>
                    </div>
                    <Progress value={100} className="h-2 bg-green-100" />
                  </div>

                  <div>
                    <div className="flex justify-between text-sm mb-1">
                      <span>2FA Coverage</span>
                      <span className="text-yellow-600">68% users</span>
                    </div>
                    <Progress value={68} className="h-2" />
                  </div>

                  <div>
                    <div className="flex justify-between text-sm mb-1">
                      <span>Security Audit</span>
                      <span className="text-green-600">94% passed</span>
                    </div>
                    <Progress value={94} className="h-2 bg-green-100" />
                  </div>
                </div>
              </CardContent>
            </Card>

            <Card>
              <CardHeader>
                <CardTitle>üö® Security Events (24h)</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="space-y-3">
                  {mockSecurityEvents.map((event) => (
                    <div key={event.id} className="p-3 border rounded-lg">
                      <div className="flex items-center justify-between mb-2">
                        <div className="flex items-center gap-2">
                          {getSeverityBadge(event.severity)}
                          <span className="text-xs text-muted-foreground">{event.timestamp}</span>
                        </div>
                        <Badge variant="outline">{event.type}</Badge>
                      </div>
                      <p className="text-sm">{event.message}</p>
                      <p className="text-xs text-muted-foreground mt-1">
                        User: {event.user} | Action: {event.action}
                      </p>
                    </div>
                  ))}
                </div>
              </CardContent>
            </Card>
          </div>
        </TabsContent>

        <TabsContent value="infrastructure" className="space-y-4">
          <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
            <Card>
              <CardHeader>
                <CardTitle>‚öôÔ∏è Server & Database Status</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="space-y-4">
                  <div className="flex items-center justify-between">
                    <span className="text-sm">CPU Usage:</span>
                    <div className="flex items-center gap-2">
                      <Progress value={68} className="w-20 h-2" />
                      <span className="text-sm font-medium">68%</span>
                    </div>
                  </div>
                  
                  <div className="flex items-center justify-between">
                    <span className="text-sm">RAM Usage:</span>
                    <div className="flex items-center gap-2">
                      <Progress value={74} className="w-20 h-2" />
                      <span className="text-sm font-medium">74%</span>
                    </div>
                  </div>

                  <div className="flex items-center justify-between">
                    <span className="text-sm">Database:</span>
                    <div className="flex items-center gap-2">
                      <Database className="h-4 w-4 text-green-500" />
                      <span className="text-sm font-medium text-green-600">Online</span>
                    </div>
                  </div>

                  <div className="flex items-center justify-between">
                    <span className="text-sm">API Response:</span>
                    <span className="text-sm font-medium">120ms avg</span>
                  </div>
                </div>
              </CardContent>
            </Card>

            <Card>
              <CardHeader>
                <CardTitle>üåê API Integrations</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="space-y-3">
                  <div className="flex items-center justify-between">
                    <span className="text-sm">Supabase (Database):</span>
                    <Badge className="bg-green-100 text-green-800">Online</Badge>
                  </div>
                  
                  <div className="flex items-center justify-between">
                    <span className="text-sm">Banking API:</span>
                    <Badge className="bg-green-100 text-green-800">Online</Badge>
                  </div>

                  <div className="flex items-center justify-between">
                    <span className="text-sm">eInvoice API:</span>
                    <Badge className="bg-yellow-100 text-yellow-800">Throttled</Badge>
                  </div>

                  <div className="flex items-center justify-between">
                    <span className="text-sm">Zalo OA API:</span>
                    <Badge className="bg-green-100 text-green-800">Online</Badge>
                  </div>

                  <div className="flex items-center justify-between">
                    <span className="text-sm">AI Services:</span>
                    <Badge className="bg-green-100 text-green-800">Online</Badge>
                  </div>
                </div>
              </CardContent>
            </Card>
          </div>
        </TabsContent>

        <TabsContent value="compliance" className="space-y-4">
          <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
            <Card>
              <CardHeader>
                <CardTitle>üìë Compliance Status</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="space-y-4">
                  <div>
                    <div className="flex justify-between text-sm mb-1">
                      <span>GDPR Compliance</span>
                      <span>94%</span>
                    </div>
                    <Progress value={94} className="h-2" />
                  </div>
                  
                  <div>
                    <div className="flex justify-between text-sm mb-1">
                      <span>ISO 27001</span>
                      <span>92%</span>
                    </div>
                    <Progress value={92} className="h-2" />
                  </div>

                  <div>
                    <div className="flex justify-between text-sm mb-1">
                      <span>Lu·∫≠t An to√†n Th√¥ng tin VN</span>
                      <span>88%</span>
                    </div>
                    <Progress value={88} className="h-2" />
                  </div>

                  <div>
                    <div className="flex justify-between text-sm mb-1">
                      <span>Data Residency VN</span>
                      <span>100%</span>
                    </div>
                    <Progress value={100} className="h-2 bg-green-100" />
                  </div>
                </div>
              </CardContent>
            </Card>

            <Card>
              <CardHeader>
                <CardTitle>‚è∞ Compliance Reminders</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="space-y-3">
                  <div className="p-3 bg-red-50 rounded-lg border-l-4 border-l-red-500">
                    <p className="text-sm font-medium text-red-800">üö® Critical</p>
                    <p className="text-xs text-red-600">
                      ISO 27001 certificate expires in 3 months - Schedule renewal
                    </p>
                  </div>
                  
                  <div className="p-3 bg-yellow-50 rounded-lg border-l-4 border-l-yellow-500">
                    <p className="text-sm font-medium text-yellow-800">‚ö†Ô∏è Warning</p>
                    <p className="text-xs text-yellow-600">
                      15 users need audit logs review - Compliance requirement
                    </p>
                  </div>

                  <div className="p-3 bg-blue-50 rounded-lg border-l-4 border-l-blue-500">
                    <p className="text-sm font-medium text-blue-800">‚ÑπÔ∏è Info</p>
                    <p className="text-xs text-blue-600">
                      Monthly compliance report due in 5 days
                    </p>
                  </div>

                  <div className="p-3 bg-green-50 rounded-lg border-l-4 border-l-green-500">
                    <p className="text-sm font-medium text-green-800">‚úÖ Complete</p>
                    <p className="text-xs text-green-600">
                      Data backup compliance check passed
                    </p>
                  </div>
                </div>
              </CardContent>
            </Card>
          </div>
        </TabsContent>

        <TabsContent value="reports" className="space-y-4">
          <Card>
            <CardHeader>
              <CardTitle>üìä System Administration Reports</CardTitle>
            </CardHeader>
            <CardContent>
              <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                <div className="space-y-3">
                  <h4 className="font-medium">üë§ User Management</h4>
                  <div className="space-y-2">
                    <Button variant="outline" size="sm" className="w-full justify-start">
                      üìã User Activity Report
                    </Button>
                    <Button variant="outline" size="sm" className="w-full justify-start">
                      üìä Permission Audit
                    </Button>
                    <Button variant="outline" size="sm" className="w-full justify-start">
                      üìà Access Analytics
                    </Button>
                  </div>
                </div>
                
                <div className="space-y-3">
                  <h4 className="font-medium">üîí Security Reports</h4>
                  <div className="space-y-2">
                    <Button variant="outline" size="sm" className="w-full justify-start">
                      üö® Security Incidents
                    </Button>
                    <Button variant="outline" size="sm" className="w-full justify-start">
                      üîç Vulnerability Scan
                    </Button>
                    <Button variant="outline" size="sm" className="w-full justify-start">
                      üõ°Ô∏è Compliance Report
                    </Button>
                  </div>
                </div>
                
                <div className="space-y-3">
                  <h4 className="font-medium">‚öôÔ∏è Infrastructure</h4>
                  <div className="space-y-2">
                    <Button variant="outline" size="sm" className="w-full justify-start">
                      üìà Performance Report
                    </Button>
                    <Button variant="outline" size="sm" className="w-full justify-start">
                      üåê API Analytics
                    </Button>
                    <Button variant="outline" size="sm" className="w-full justify-start">
                      üíæ System Health
                    </Button>
                  </div>
                </div>
              </div>
            </CardContent>
          </Card>
        </TabsContent>
      </Tabs>
    </div>
  );
}