import { useState, useEffect, useMemo } from "react";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { Progress } from "@/components/ui/progress";
import { ClusterView } from "./ClusterView";
import { supabase } from "@/lib/supabase";
import { useAuth } from "@/contexts/AuthContext";
import { useToast } from "@/hooks/use-toast";
import { 
  Building2, 
  TrendingUp, 
  Users, 
  DollarSign, 
  Target, 
  Package, 
  AlertTriangle, 
  FileText,
  Settings,
  Plus,
  Download,
  Search,
  Filter,
  BarChart3,
  PieChart,
  ArrowRight,
  Briefcase,
  MapPin,
  Calendar,
  Percent,
  Network,
  Globe,
  Layers,
  Factory,
  Zap,
  Database,
  Coffee,
  Laptop,
  GraduationCap,
  TrendingDown
} from "lucide-react";
import { useNavigate } from "react-router-dom";

interface ClusterManagementViewProps {
  organizations: any[];
}

export function ClusterManagementView({ organizations }: ClusterManagementViewProps) {
  const [selectedTimeframe, setSelectedTimeframe] = useState("quarter");
  const [selectedCluster, setSelectedCluster] = useState<any>(null);
  const [viewMode, setViewMode] = useState("overview");
  const [loading, setLoading] = useState(true);
  const [dbOrganizations, setDbOrganizations] = useState<any[]>([]);
  const navigate = useNavigate();
  const { user } = useAuth();
  const { toast } = useToast();

  // Load F1 organizations from database
  useEffect(() => {
    const loadF1Organizations = async () => {
      if (!user) return;
      
      try {
        setLoading(true);
        const { data, error } = await supabase
          .from('user_organization_roles')
          .select(`
            organizations (
              id,
              name,
              code,
              level,
              industry,
              main_products,
              bmc_equity_percentage,
              total_investment_value,
              investment_year,
              description,
              status,
              created_at
            )
          `)
          .eq('user_id', user.id);

        if (error) {
          console.error('Error loading F1 organizations:', error);
          toast({
            title: "L·ªói t·∫£i d·ªØ li·ªáu",
            description: "Kh√¥ng th·ªÉ t·∫£i danh s√°ch c·ª•m ng√†nh F1",
            variant: "destructive"
          });
        } else {
          setDbOrganizations(data || []);
        }
      } catch (error) {
        console.error('Error:', error);
      } finally {
        setLoading(false);
      }
    };

    loadF1Organizations();
  }, [user, toast]);

  // Industry mapping for F1 clusters
  const industryClusterMapping = {
    "F&B": "f1-fnb",
    "Technology": "f1-tech",
    "Education": "f1-edu",
    "Finance": "f1-finance",
    "Manufacturing": "f1-manufacturing",
    "Retail": "f1-retail",
    "Healthcare": "f1-healthcare",
    "Real Estate": "f1-realestate",
    "Logistics": "f1-logistics",
    "Agriculture": "f1-agriculture",
    "Energy": "f1-energy",
    // Legacy mappings for backward compatibility
    "F&B - Th·ª±c ph·∫©m ƒë·ªì u·ªëng": "f1-fnb",
    "C√¥ng ngh·ªá - Technology": "f1-tech",
    "Gi√°o d·ª•c - Education": "f1-edu",
    "T√†i ch√≠nh - Finance": "f1-finance",
    "B√°n l·∫ª - Retail": "f1-retail",
    "Y t·∫ø - Healthcare": "f1-healthcare",
    "B·∫•t ƒë·ªông s·∫£n - Real Estate": "f1-realestate",
    "S·∫£n xu·∫•t - Manufacturing": "f1-manufacturing",
    "N√¥ng nghi·ªáp - Agriculture": "f1-agriculture",
    "NƒÉng l∆∞·ª£ng - Energy": "f1-energy"
  };

  // Filter and categorize F1 companies from database
  const { f1CompaniesByCluster, clusterMetrics } = useMemo(() => {
    const f1Companies = dbOrganizations
      .filter(org => org.organizations?.level === 'F1')
      .map(org => ({
        id: org.organizations.id,
        name: org.organizations.name,
        level: 'F1',
        industry: org.organizations.industry || 'Ch∆∞a x√°c ƒë·ªãnh',
        bmcOwnership: org.organizations.bmc_equity_percentage || 0,
        revenue: 0, // S·∫Ω ƒë∆∞·ª£c c·∫≠p nh·∫≠t t·ª´ consolidated_reports
        expenses: 0,
        profit: 0,
        employees: 0,
        avgKPI: 0,
        complianceScore: 0,
        sectorFund: org.organizations.total_investment_value || 0,
        growth: 0,
        establishedDate: org.organizations.created_at,
        code: org.organizations.code,
        description: org.organizations.description,
        status: org.organizations.status
      }));

    // Group F1 companies by cluster
    const companiesByCluster: { [key: string]: any[] } = {};
    const metrics: { [key: string]: any } = {};

    f1Companies.forEach(company => {
      const clusterId = industryClusterMapping[company.industry] || 'f1-other';
      if (!companiesByCluster[clusterId]) {
        companiesByCluster[clusterId] = [];
      }
      companiesByCluster[clusterId].push(company);
    });

    // Calculate metrics for each cluster
    Object.keys(companiesByCluster).forEach(clusterId => {
      const companies = companiesByCluster[clusterId];
      metrics[clusterId] = {
        revenue: companies.reduce((sum, c) => sum + c.revenue, 0),
        expenses: companies.reduce((sum, c) => sum + c.expenses, 0),
        profit: companies.reduce((sum, c) => sum + c.profit, 0),
        employees: companies.reduce((sum, c) => sum + c.employees, 0),
        avgKPI: companies.length > 0 ? Math.round(companies.reduce((sum, c) => sum + c.avgKPI, 0) / companies.length) : 0,
        complianceScore: companies.length > 0 ? Math.round(companies.reduce((sum, c) => sum + c.complianceScore, 0) / companies.length) : 0,
        sectorFund: companies.reduce((sum, c) => sum + c.sectorFund, 0),
        bmcOwnership: companies.length > 0 ? Math.round(companies.reduce((sum, c) => sum + c.bmcOwnership, 0) / companies.length) : 0,
        memberCompanies: companies
      };
    });

    return {
      f1CompaniesByCluster: companiesByCluster,
      clusterMetrics: metrics
    };
  }, [dbOrganizations]);

  // Cluster Data v·ªõi d·ªØ li·ªáu th·ª±c t·ª´ database
  const clusterData = [
    {
      id: "f1-fnb",
      name: "üçî F1 - C·ª•m F&B",
      industry: "Food & Beverage",
      icon: Coffee,
      bmcOwnership: clusterMetrics["f1-fnb"]?.bmcOwnership || 0,
      revenue: clusterMetrics["f1-fnb"]?.revenue || 0,
      expenses: clusterMetrics["f1-fnb"]?.expenses || 0,
      profit: clusterMetrics["f1-fnb"]?.profit || 0,
      employees: clusterMetrics["f1-fnb"]?.employees || 0,
      avgKPI: clusterMetrics["f1-fnb"]?.avgKPI || 0,
      complianceScore: clusterMetrics["f1-fnb"]?.complianceScore || 0,
      sectorFund: clusterMetrics["f1-fnb"]?.sectorFund || 0,
      growth: 0, // S·∫Ω ƒë∆∞·ª£c t√≠nh t·ª´ historical data
      memberCompanies: f1CompaniesByCluster["f1-fnb"] || [],
      aiInsights: {
        strengths: f1CompaniesByCluster["f1-fnb"]?.length > 0 ? `${f1CompaniesByCluster["f1-fnb"].length} c√¥ng ty F1 ƒëang ho·∫°t ƒë·ªông trong c·ª•m F&B` : "S·∫µn s√†ng kh·ªüi t·∫°o c√¥ng ty m·ªõi",
        warnings: f1CompaniesByCluster["f1-fnb"]?.length === 0 ? "Ch∆∞a c√≥ c√¥ng ty F1 trong c·ª•m ng√†nh" : "C·∫ßn c·∫≠p nh·∫≠t d·ªØ li·ªáu b√°o c√°o",
        recommendations: f1CompaniesByCluster["f1-fnb"]?.length === 0 ? "Kh·ªüi t·∫°o c√°c c√¥ng ty F1 m·ªõi trong c·ª•m ng√†nh F&B" : "T·ªëi ∆∞u h√≥a hi·ªáu su·∫•t v√† m·ªü r·ªông danh m·ª•c"
      }
    },
    {
      id: "f1-tech",
      name: "üíª F1 - C·ª•m C√¥ng ngh·ªá",
      industry: "Technology",
      icon: Laptop,
      bmcOwnership: clusterMetrics["f1-tech"]?.bmcOwnership || 0,
      revenue: clusterMetrics["f1-tech"]?.revenue || 0,
      expenses: clusterMetrics["f1-tech"]?.expenses || 0,
      profit: clusterMetrics["f1-tech"]?.profit || 0,
      employees: clusterMetrics["f1-tech"]?.employees || 0,
      avgKPI: clusterMetrics["f1-tech"]?.avgKPI || 0,
      complianceScore: clusterMetrics["f1-tech"]?.complianceScore || 0,
      sectorFund: clusterMetrics["f1-tech"]?.sectorFund || 0,
      growth: 0,
      memberCompanies: f1CompaniesByCluster["f1-tech"] || [],
      aiInsights: {
        strengths: f1CompaniesByCluster["f1-tech"]?.length > 0 ? `${f1CompaniesByCluster["f1-tech"].length} c√¥ng ty F1 ƒëang ho·∫°t ƒë·ªông trong c·ª•m C√¥ng ngh·ªá` : "S·∫µn s√†ng kh·ªüi t·∫°o c√¥ng ty m·ªõi",
        warnings: f1CompaniesByCluster["f1-tech"]?.length === 0 ? "Ch∆∞a c√≥ c√¥ng ty F1 trong c·ª•m ng√†nh" : "C·∫ßn c·∫≠p nh·∫≠t d·ªØ li·ªáu b√°o c√°o",
        recommendations: f1CompaniesByCluster["f1-tech"]?.length === 0 ? "Kh·ªüi t·∫°o c√°c c√¥ng ty F1 m·ªõi trong c·ª•m ng√†nh C√¥ng ngh·ªá" : "ƒê·∫ßu t∆∞ R&D v√† m·ªü r·ªông th·ªã tr∆∞·ªùng"
      }
    },
    {
      id: "f1-edu",
      name: "üéì F1 - C·ª•m Gi√°o d·ª•c",
      industry: "Education",
      icon: GraduationCap,
      bmcOwnership: clusterMetrics["f1-edu"]?.bmcOwnership || 0,
      revenue: clusterMetrics["f1-edu"]?.revenue || 0,
      expenses: clusterMetrics["f1-edu"]?.expenses || 0,
      profit: clusterMetrics["f1-edu"]?.profit || 0,
      employees: clusterMetrics["f1-edu"]?.employees || 0,
      avgKPI: clusterMetrics["f1-edu"]?.avgKPI || 0,
      complianceScore: clusterMetrics["f1-edu"]?.complianceScore || 0,
      sectorFund: clusterMetrics["f1-edu"]?.sectorFund || 0,
      growth: 0,
      memberCompanies: f1CompaniesByCluster["f1-edu"] || [],
      aiInsights: {
        strengths: f1CompaniesByCluster["f1-edu"]?.length > 0 ? `${f1CompaniesByCluster["f1-edu"].length} c√¥ng ty F1 ƒëang ho·∫°t ƒë·ªông trong c·ª•m Gi√°o d·ª•c` : "S·∫µn s√†ng kh·ªüi t·∫°o c√¥ng ty m·ªõi",
        warnings: f1CompaniesByCluster["f1-edu"]?.length === 0 ? "Ch∆∞a c√≥ c√¥ng ty F1 trong c·ª•m ng√†nh" : "C·∫ßn c·∫≠p nh·∫≠t d·ªØ li·ªáu b√°o c√°o",
        recommendations: f1CompaniesByCluster["f1-edu"]?.length === 0 ? "Kh·ªüi t·∫°o c√°c c√¥ng ty F1 m·ªõi trong c·ª•m ng√†nh Gi√°o d·ª•c" : "Ph√°t tri·ªÉn ch∆∞∆°ng tr√¨nh ƒë√†o t·∫°o v√† m·ªü r·ªông th·ªã tr∆∞·ªùng"
      }
    },
    {
      id: "f1-finance",
      name: "üè¶ F1 - C·ª•m T√†i ch√≠nh",
      industry: "Financial Services",
      icon: DollarSign,
      bmcOwnership: clusterMetrics["f1-finance"]?.bmcOwnership || 0,
      revenue: clusterMetrics["f1-finance"]?.revenue || 0,
      expenses: clusterMetrics["f1-finance"]?.expenses || 0,
      profit: clusterMetrics["f1-finance"]?.profit || 0,
      employees: clusterMetrics["f1-finance"]?.employees || 0,
      avgKPI: clusterMetrics["f1-finance"]?.avgKPI || 0,
      complianceScore: clusterMetrics["f1-finance"]?.complianceScore || 0,
      sectorFund: clusterMetrics["f1-finance"]?.sectorFund || 0,
      growth: 0,
      memberCompanies: f1CompaniesByCluster["f1-finance"] || [],
      aiInsights: {
        strengths: f1CompaniesByCluster["f1-finance"]?.length > 0 ? `${f1CompaniesByCluster["f1-finance"].length} c√¥ng ty F1 ƒëang ho·∫°t ƒë·ªông trong c·ª•m T√†i ch√≠nh` : "S·∫µn s√†ng kh·ªüi t·∫°o c√¥ng ty m·ªõi",
        warnings: f1CompaniesByCluster["f1-finance"]?.length === 0 ? "Ch∆∞a c√≥ c√¥ng ty F1 trong c·ª•m ng√†nh" : "C·∫ßn tu√¢n th·ªß quy ƒë·ªãnh t√†i ch√≠nh",
        recommendations: f1CompaniesByCluster["f1-finance"]?.length === 0 ? "Kh·ªüi t·∫°o c√°c c√¥ng ty F1 m·ªõi trong c·ª•m ng√†nh T√†i ch√≠nh" : "M·ªü r·ªông d·ªãch v·ª• v√† tƒÉng c∆∞·ªùng qu·∫£n l√Ω r·ªßi ro"
      }
    },
    {
      id: "f1-manufacturing",
      name: "üè≠ F1 - C·ª•m S·∫£n xu·∫•t",
      industry: "Manufacturing",
      icon: Factory,
      bmcOwnership: clusterMetrics["f1-manufacturing"]?.bmcOwnership || 0,
      revenue: clusterMetrics["f1-manufacturing"]?.revenue || 0,
      expenses: clusterMetrics["f1-manufacturing"]?.expenses || 0,
      profit: clusterMetrics["f1-manufacturing"]?.profit || 0,
      employees: clusterMetrics["f1-manufacturing"]?.employees || 0,
      avgKPI: clusterMetrics["f1-manufacturing"]?.avgKPI || 0,
      complianceScore: clusterMetrics["f1-manufacturing"]?.complianceScore || 0,
      sectorFund: clusterMetrics["f1-manufacturing"]?.sectorFund || 0,
      growth: 0,
      memberCompanies: f1CompaniesByCluster["f1-manufacturing"] || [],
      aiInsights: {
        strengths: f1CompaniesByCluster["f1-manufacturing"]?.length > 0 ? `${f1CompaniesByCluster["f1-manufacturing"].length} c√¥ng ty F1 ƒëang ho·∫°t ƒë·ªông trong c·ª•m S·∫£n xu·∫•t` : "S·∫µn s√†ng kh·ªüi t·∫°o c√¥ng ty m·ªõi",
        warnings: f1CompaniesByCluster["f1-manufacturing"]?.length === 0 ? "Ch∆∞a c√≥ c√¥ng ty F1 trong c·ª•m ng√†nh" : "C·∫ßn t·ªëi ∆∞u h√≥a quy tr√¨nh s·∫£n xu·∫•t",
        recommendations: f1CompaniesByCluster["f1-manufacturing"]?.length === 0 ? "Kh·ªüi t·∫°o c√°c c√¥ng ty F1 m·ªõi trong c·ª•m ng√†nh S·∫£n xu·∫•t" : "ƒê·∫ßu t∆∞ c√¥ng ngh·ªá v√† t·ª± ƒë·ªông h√≥a"
      }
    },
    {
      id: "f1-retail",
      name: "üõí F1 - C·ª•m B√°n l·∫ª",
      industry: "Retail & Consumer",
      icon: Package,
      bmcOwnership: clusterMetrics["f1-retail"]?.bmcOwnership || 0,
      revenue: clusterMetrics["f1-retail"]?.revenue || 0,
      expenses: clusterMetrics["f1-retail"]?.expenses || 0,
      profit: clusterMetrics["f1-retail"]?.profit || 0,
      employees: clusterMetrics["f1-retail"]?.employees || 0,
      avgKPI: clusterMetrics["f1-retail"]?.avgKPI || 0,
      complianceScore: clusterMetrics["f1-retail"]?.complianceScore || 0,
      sectorFund: clusterMetrics["f1-retail"]?.sectorFund || 0,
      growth: 0,
      memberCompanies: f1CompaniesByCluster["f1-retail"] || [],
      aiInsights: {
        strengths: f1CompaniesByCluster["f1-retail"]?.length > 0 ? `${f1CompaniesByCluster["f1-retail"].length} c√¥ng ty F1 ƒëang ho·∫°t ƒë·ªông trong c·ª•m B√°n l·∫ª` : "S·∫µn s√†ng kh·ªüi t·∫°o c√¥ng ty m·ªõi",
        warnings: f1CompaniesByCluster["f1-retail"]?.length === 0 ? "Ch∆∞a c√≥ c√¥ng ty F1 trong c·ª•m ng√†nh" : "C·∫ßn theo d√µi xu h∆∞·ªõng th·ªã tr∆∞·ªùng",
        recommendations: f1CompaniesByCluster["f1-retail"]?.length === 0 ? "Kh·ªüi t·∫°o c√°c c√¥ng ty F1 m·ªõi trong c·ª•m ng√†nh B√°n l·∫ª" : "Ph√°t tri·ªÉn k√™nh online v√† c·∫£i thi·ªán tr·∫£i nghi·ªám kh√°ch h√†ng"
      }
    },
    {
      id: "f1-healthcare",
      name: "üè• F1 - C·ª•m Y t·∫ø",
      industry: "Healthcare",
      icon: Target,
      bmcOwnership: clusterMetrics["f1-healthcare"]?.bmcOwnership || 0,
      revenue: clusterMetrics["f1-healthcare"]?.revenue || 0,
      expenses: clusterMetrics["f1-healthcare"]?.expenses || 0,
      profit: clusterMetrics["f1-healthcare"]?.profit || 0,
      employees: clusterMetrics["f1-healthcare"]?.employees || 0,
      avgKPI: clusterMetrics["f1-healthcare"]?.avgKPI || 0,
      complianceScore: clusterMetrics["f1-healthcare"]?.complianceScore || 0,
      sectorFund: clusterMetrics["f1-healthcare"]?.sectorFund || 0,
      growth: 0,
      memberCompanies: f1CompaniesByCluster["f1-healthcare"] || [],
      aiInsights: {
        strengths: f1CompaniesByCluster["f1-healthcare"]?.length > 0 ? `${f1CompaniesByCluster["f1-healthcare"].length} c√¥ng ty F1 ƒëang ho·∫°t ƒë·ªông trong c·ª•m Y t·∫ø` : "S·∫µn s√†ng kh·ªüi t·∫°o c√¥ng ty m·ªõi",
        warnings: f1CompaniesByCluster["f1-healthcare"]?.length === 0 ? "Ch∆∞a c√≥ c√¥ng ty F1 trong c·ª•m ng√†nh" : "C·∫ßn tu√¢n th·ªß quy ƒë·ªãnh y t·∫ø nghi√™m ng·∫∑t",
        recommendations: f1CompaniesByCluster["f1-healthcare"]?.length === 0 ? "Kh·ªüi t·∫°o c√°c c√¥ng ty F1 m·ªõi trong c·ª•m ng√†nh Y t·∫ø" : "ƒê·∫ßu t∆∞ nghi√™n c·ª©u v√† ph√°t tri·ªÉn d·ªãch v·ª• y t·∫ø"
      }
    },
    {
      id: "f1-realestate",
      name: "üè¢ F1 - C·ª•m B·∫•t ƒë·ªông s·∫£n",
      industry: "Real Estate",
      icon: Building2,
      bmcOwnership: clusterMetrics["f1-realestate"]?.bmcOwnership || 0,
      revenue: clusterMetrics["f1-realestate"]?.revenue || 0,
      expenses: clusterMetrics["f1-realestate"]?.expenses || 0,
      profit: clusterMetrics["f1-realestate"]?.profit || 0,
      employees: clusterMetrics["f1-realestate"]?.employees || 0,
      avgKPI: clusterMetrics["f1-realestate"]?.avgKPI || 0,
      complianceScore: clusterMetrics["f1-realestate"]?.complianceScore || 0,
      sectorFund: clusterMetrics["f1-realestate"]?.sectorFund || 0,
      growth: 0,
      memberCompanies: f1CompaniesByCluster["f1-realestate"] || [],
      aiInsights: {
        strengths: f1CompaniesByCluster["f1-realestate"]?.length > 0 ? `${f1CompaniesByCluster["f1-realestate"].length} c√¥ng ty F1 ƒëang ho·∫°t ƒë·ªông trong c·ª•m B·∫•t ƒë·ªông s·∫£n` : "S·∫µn s√†ng kh·ªüi t·∫°o c√¥ng ty m·ªõi",
        warnings: f1CompaniesByCluster["f1-realestate"]?.length === 0 ? "Ch∆∞a c√≥ c√¥ng ty F1 trong c·ª•m ng√†nh" : "C·∫ßn theo d√µi th·ªã tr∆∞·ªùng b·∫•t ƒë·ªông s·∫£n",
        recommendations: f1CompaniesByCluster["f1-realestate"]?.length === 0 ? "Kh·ªüi t·∫°o c√°c c√¥ng ty F1 m·ªõi trong c·ª•m ng√†nh B·∫•t ƒë·ªông s·∫£n" : "Ph√°t tri·ªÉn d·ª± √°n v√† qu·∫£n l√Ω danh m·ª•c b·∫•t ƒë·ªông s·∫£n"
      }
    },
    {
      id: "f1-logistics",
      name: "üöõ F1 - C·ª•m Logistics",
      industry: "Logistics & Supply Chain",
      icon: Package,
      bmcOwnership: clusterMetrics["f1-logistics"]?.bmcOwnership || 0,
      revenue: clusterMetrics["f1-logistics"]?.revenue || 0,
      expenses: clusterMetrics["f1-logistics"]?.expenses || 0,
      profit: clusterMetrics["f1-logistics"]?.profit || 0,
      employees: clusterMetrics["f1-logistics"]?.employees || 0,
      avgKPI: clusterMetrics["f1-logistics"]?.avgKPI || 0,
      complianceScore: clusterMetrics["f1-logistics"]?.complianceScore || 0,
      sectorFund: clusterMetrics["f1-logistics"]?.sectorFund || 0,
      growth: 0,
      memberCompanies: f1CompaniesByCluster["f1-logistics"] || [],
      aiInsights: {
        strengths: f1CompaniesByCluster["f1-logistics"]?.length > 0 ? `${f1CompaniesByCluster["f1-logistics"].length} c√¥ng ty F1 ƒëang ho·∫°t ƒë·ªông trong c·ª•m Logistics` : "S·∫µn s√†ng kh·ªüi t·∫°o c√¥ng ty m·ªõi",
        warnings: f1CompaniesByCluster["f1-logistics"]?.length === 0 ? "Ch∆∞a c√≥ c√¥ng ty F1 trong c·ª•m ng√†nh" : "C·∫ßn t·ªëi ∆∞u h√≥a chu·ªói cung ·ª©ng",
        recommendations: f1CompaniesByCluster["f1-logistics"]?.length === 0 ? "Kh·ªüi t·∫°o c√°c c√¥ng ty F1 m·ªõi trong c·ª•m ng√†nh Logistics" : "M·ªü r·ªông m·∫°ng l∆∞·ªõi v√† ·ª©ng d·ª•ng c√¥ng ngh·ªá 4.0"
      }
    },
    {
      id: "f1-agriculture",
      name: "üåæ F1 - C·ª•m N√¥ng nghi·ªáp",
      industry: "Agriculture & Food Processing",
      icon: Factory,
      bmcOwnership: clusterMetrics["f1-agriculture"]?.bmcOwnership || 0,
      revenue: clusterMetrics["f1-agriculture"]?.revenue || 0,
      expenses: clusterMetrics["f1-agriculture"]?.expenses || 0,
      profit: clusterMetrics["f1-agriculture"]?.profit || 0,
      employees: clusterMetrics["f1-agriculture"]?.employees || 0,
      avgKPI: clusterMetrics["f1-agriculture"]?.avgKPI || 0,
      complianceScore: clusterMetrics["f1-agriculture"]?.complianceScore || 0,
      sectorFund: clusterMetrics["f1-agriculture"]?.sectorFund || 0,
      growth: 0,
      memberCompanies: f1CompaniesByCluster["f1-agriculture"] || [],
      aiInsights: {
        strengths: f1CompaniesByCluster["f1-agriculture"]?.length > 0 ? `${f1CompaniesByCluster["f1-agriculture"].length} c√¥ng ty F1 ƒëang ho·∫°t ƒë·ªông trong c·ª•m N√¥ng nghi·ªáp` : "S·∫µn s√†ng kh·ªüi t·∫°o c√¥ng ty m·ªõi",
        warnings: f1CompaniesByCluster["f1-agriculture"]?.length === 0 ? "Ch∆∞a c√≥ c√¥ng ty F1 trong c·ª•m ng√†nh" : "C·∫ßn theo d√µi th·ªùi ti·∫øt v√† m√πa v·ª•",
        recommendations: f1CompaniesByCluster["f1-agriculture"]?.length === 0 ? "Kh·ªüi t·∫°o c√°c c√¥ng ty F1 m·ªõi trong c·ª•m ng√†nh N√¥ng nghi·ªáp" : "·ª®ng d·ª•ng c√¥ng ngh·ªá cao v√† ph√°t tri·ªÉn b·ªÅn v·ªØng"
      }
    },
    {
      id: "f1-energy",
      name: "‚ö° F1 - C·ª•m NƒÉng l∆∞·ª£ng",
      industry: "Energy & Utilities",
      icon: Zap,
      bmcOwnership: clusterMetrics["f1-energy"]?.bmcOwnership || 0,
      revenue: clusterMetrics["f1-energy"]?.revenue || 0,
      expenses: clusterMetrics["f1-energy"]?.expenses || 0,
      profit: clusterMetrics["f1-energy"]?.profit || 0,
      employees: clusterMetrics["f1-energy"]?.employees || 0,
      avgKPI: clusterMetrics["f1-energy"]?.avgKPI || 0,
      complianceScore: clusterMetrics["f1-energy"]?.complianceScore || 0,
      sectorFund: clusterMetrics["f1-energy"]?.sectorFund || 0,
      growth: 0,
      memberCompanies: f1CompaniesByCluster["f1-energy"] || [],
      aiInsights: {
        strengths: f1CompaniesByCluster["f1-energy"]?.length > 0 ? `${f1CompaniesByCluster["f1-energy"].length} c√¥ng ty F1 ƒëang ho·∫°t ƒë·ªông trong c·ª•m NƒÉng l∆∞·ª£ng` : "S·∫µn s√†ng kh·ªüi t·∫°o c√¥ng ty m·ªõi",
        warnings: f1CompaniesByCluster["f1-energy"]?.length === 0 ? "Ch∆∞a c√≥ c√¥ng ty F1 trong c·ª•m ng√†nh" : "C·∫ßn tu√¢n th·ªß quy ƒë·ªãnh m√¥i tr∆∞·ªùng",
        recommendations: f1CompaniesByCluster["f1-energy"]?.length === 0 ? "Kh·ªüi t·∫°o c√°c c√¥ng ty F1 m·ªõi trong c·ª•m ng√†nh NƒÉng l∆∞·ª£ng" : "Ph√°t tri·ªÉn nƒÉng l∆∞·ª£ng t√°i t·∫°o v√† ti·∫øt ki·ªám nƒÉng l∆∞·ª£ng"
      }
    }
  ];

  const totalMetrics = {
    revenue: clusterData.reduce((sum, c) => sum + c.revenue, 0),
    profit: clusterData.reduce((sum, c) => sum + c.profit, 0),
    employees: clusterData.reduce((sum, c) => sum + c.employees, 0),
    avgKPI: Math.round(clusterData.reduce((sum, c) => sum + c.avgKPI, 0) / clusterData.length),
    avgCompliance: Math.round(clusterData.reduce((sum, c) => sum + c.complianceScore, 0) / clusterData.length),
    totalFund: clusterData.reduce((sum, c) => sum + c.sectorFund, 0),
    totalCompanies: clusterData.reduce((sum, c) => sum + c.memberCompanies.length, 0)
  };

  if (selectedCluster) {
    return <ClusterView organizations={organizations} />;
  }

  if (loading) {
    return (
      <div className="flex items-center justify-center h-64">
        <div className="text-center">
          <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-primary mx-auto mb-4"></div>
          <p className="text-muted-foreground">ƒêang t·∫£i d·ªØ li·ªáu c·ª•m ng√†nh F1...</p>
        </div>
      </div>
    );
  }

  return (
    <div className="space-y-6">
      {/* Header Section */}
      <div className="flex items-center justify-between">
        <div>
          <h1 className="text-3xl font-bold text-foreground">üè¢ F1 - Qu·∫£n Tr√≠ C·ª•m Ng√†nh</h1>
          <p className="text-muted-foreground mt-2">
            Mini Holding - ƒêi·ªÅu ph·ªëi to√†n b·ªô c√°c c·ª•m ng√†nh chi·∫øn l∆∞·ª£c BMC (‚â•80% ownership)
          </p>
          <div className="flex items-center space-x-4 mt-3">
            <Badge variant="secondary" className="text-sm">
              üìä {clusterData.length} C·ª•m ng√†nh ho·∫°t ƒë·ªông
            </Badge>
            <Badge variant="secondary" className="text-sm">
              üí∞ {(totalMetrics.totalFund / 1000000000).toFixed(1)} t·ª∑ VNƒê qu·ªπ ph√°t tri·ªÉn
            </Badge>
            <Badge variant="outline" className="text-sm">
              üè¢ {totalMetrics.totalCompanies} c√¥ng ty F1 th√†nh vi√™n
            </Badge>
            {totalMetrics.totalCompanies === 0 && (
              <Badge variant="destructive" className="text-sm">
                ‚ö†Ô∏è Ch∆∞a c√≥ c√¥ng ty F1 trong h·ªá th·ªëng
              </Badge>
            )}
          </div>
        </div>
        <div className="flex items-center space-x-3">
          <Select value={selectedTimeframe} onValueChange={setSelectedTimeframe}>
            <SelectTrigger className="w-32">
              <SelectValue />
            </SelectTrigger>
            <SelectContent>
              <SelectItem value="month">Th√°ng</SelectItem>
              <SelectItem value="quarter">Qu√Ω</SelectItem>
              <SelectItem value="year">NƒÉm</SelectItem>
            </SelectContent>
          </Select>
          <Button variant="outline" size="sm">
            <Filter className="h-4 w-4 mr-2" />
            B·ªô l·ªçc
          </Button>
        </div>
      </div>

      {/* Filter Bar */}
      <div className="bg-card p-4 rounded-lg border">
        <div className="flex items-center justify-between">
          <div className="flex items-center space-x-4">
            <div className="flex items-center space-x-2">
              <label className="text-sm font-medium">C·ª•m ng√†nh:</label>
              <Select defaultValue="all">
                <SelectTrigger className="w-36">
                  <SelectValue />
                </SelectTrigger>
                <SelectContent>
                  <SelectItem value="all">T·∫•t c·∫£ c·ª•m</SelectItem>
                  <SelectItem value="fb">F&B</SelectItem>
                  <SelectItem value="tech">C√¥ng ngh·ªá</SelectItem>
                  <SelectItem value="education">Gi√°o d·ª•c</SelectItem>
                  <SelectItem value="investment">ƒê·∫ßu t∆∞</SelectItem>
                </SelectContent>
              </Select>
            </div>
            <div className="flex items-center space-x-2">
              <label className="text-sm font-medium">Ch·∫ø ƒë·ªô xem:</label>
              <Select value={viewMode} onValueChange={(value: "overview" | "detailed") => setViewMode(value)}>
                <SelectTrigger className="w-32">
                  <SelectValue />
                </SelectTrigger>
                <SelectContent>
                  <SelectItem value="overview">T·ªïng h·ª£p</SelectItem>
                  <SelectItem value="detailed">Chi ti·∫øt</SelectItem>
                </SelectContent>
              </Select>
            </div>
          </div>
          <Button variant="default" size="sm">
            <Search className="h-4 w-4 mr-2" />
            ü§ñ H·ªèi AI
          </Button>
        </div>
      </div>

      {/* Overview Cards v·ªõi d·ªØ li·ªáu th·ª±c t·ª´ mockup */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
        <Card>
          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
            <CardTitle className="text-sm font-medium">Doanh Thu C·ª•m Ng√†nh</CardTitle>
            <DollarSign className="h-4 w-4 text-muted-foreground" />
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold">{totalMetrics.revenue} t·ª∑ VNƒê</div>
            <p className="text-xs text-muted-foreground">
              <TrendingUp className="inline h-3 w-3 mr-1" />
              F&B: 420 t·ª∑ | Tech: 310 t·ª∑ | Edu: 160 t·ª∑
            </p>
            <p className="text-xs text-muted-foreground mt-1">
              üí° F&B Cluster d·∫´n ƒë·∫ßu v·ªõi 47% t·ªïng doanh thu
            </p>
          </CardContent>
        </Card>

        <Card>
          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
            <CardTitle className="text-sm font-medium">L·ª£i Nhu·∫≠n H·ª£p Nh·∫•t</CardTitle>
            <Target className="h-4 w-4 text-muted-foreground" />
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold">{totalMetrics.profit} t·ª∑ VNƒê</div>
            <p className="text-xs text-muted-foreground">
              Margin: {((totalMetrics.profit / totalMetrics.revenue) * 100).toFixed(1)}%
            </p>
            <p className="text-xs text-muted-foreground mt-1">
              üí° Tech cluster margin cao nh·∫•t 21%
            </p>
          </CardContent>
        </Card>

        <Card>
          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
            <CardTitle className="text-sm font-medium">T·ªïng Nh√¢n L·ª±c</CardTitle>
            <Users className="h-4 w-4 text-muted-foreground" />
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold">{totalMetrics.employees.toLocaleString()}</div>
            <p className="text-xs text-muted-foreground">
              KPI TB: {totalMetrics.avgKPI}% | Compliance: {totalMetrics.avgCompliance}%
            </p>
            <p className="text-xs text-muted-foreground mt-1">
              üí° Tech cluster KPI cao nh·∫•t 81%
            </p>
          </CardContent>
        </Card>

        <Card>
          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
            <CardTitle className="text-sm font-medium">Qu·ªπ Ph√°t Tri·ªÉn</CardTitle>
            <Briefcase className="h-4 w-4 text-muted-foreground" />
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold">{totalMetrics.totalFund} t·ª∑ VNƒê</div>
            <p className="text-xs text-muted-foreground">
              Tech: 200 t·ª∑ | F&B: 120 t·ª∑ | Edu: 80 t·ª∑
            </p>
            <p className="text-xs text-muted-foreground mt-1">
              üí° Tech fund l·ªõn nh·∫•t ƒë·ªÉ R&D AI/ML
            </p>
          </CardContent>
        </Card>
      </div>

      {/* Visual Analytics */}
      <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
        <Card className="lg:col-span-2">
          <CardHeader>
            <CardTitle className="flex items-center">
              <BarChart3 className="h-5 w-5 mr-2" />
              Hi·ªáu Su·∫•t C√°c C·ª•m Ng√†nh
            </CardTitle>
          </CardHeader>
          <CardContent>
            <div className="space-y-4">
              {clusterData.map((cluster, index) => (
                <div key={cluster.id} className="space-y-2">
                  <div className="flex justify-between text-sm">
                    <span className="font-medium flex items-center">
                      <cluster.icon className="h-4 w-4 mr-2" />
                      {cluster.name}
                    </span>
                    <span>{cluster.revenue} t·ª∑ VNƒê</span>
                  </div>
                  <Progress value={(cluster.revenue / totalMetrics.revenue) * 100} className="h-3" />
                  <div className="flex justify-between text-xs text-muted-foreground">
                    <span>{cluster.memberCompanies.length} c√¥ng ty</span>
                    <span className={cluster.growth > 15 ? "text-green-600" : cluster.growth < 10 ? "text-red-500" : ""}>
                      {cluster.growth > 15 ? "üìà" : cluster.growth < 10 ? "üìâ" : "üìä"} +{cluster.growth}% growth
                    </span>
                  </div>
                </div>
              ))}
            </div>
          </CardContent>
        </Card>

        <Card>
          <CardHeader>
            <CardTitle className="flex items-center">
              <Network className="h-5 w-5 mr-2" />
              C·∫•u Tr√∫c C·ª•m Ng√†nh
            </CardTitle>
          </CardHeader>
          <CardContent>
            <div className="space-y-4">
              <div className="text-center p-4 bg-primary/10 rounded-lg">
                <Globe className="h-8 w-8 mx-auto mb-2 text-primary" />
                <div className="font-semibold">BMC Holdings</div>
                <div className="text-sm text-muted-foreground">100% s·ªü h·ªØu</div>
              </div>
              <div className="space-y-2">
                {clusterData.map((cluster, index) => (
                  <div key={cluster.id} className="flex items-center justify-between p-2 bg-muted/50 rounded">
                    <div className="flex items-center space-x-2">
                      <cluster.icon className="h-4 w-4 text-muted-foreground" />
                      <span className="text-sm font-medium">{cluster.name}</span>
                    </div>
                    <div className="flex items-center space-x-2">
                      <Badge variant="secondary" className="text-xs">
                        {cluster.memberCompanies.length} c√¥ng ty
                      </Badge>
                      <Badge variant="outline" className="text-xs">
                        BMC {cluster.bmcOwnership}%
                      </Badge>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          </CardContent>
        </Card>
      </div>

      {/* F1 Clusters Grid v·ªõi Mockup Data Chi Ti·∫øt */}
      <div className="grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-6">
        {clusterData.map((cluster) => (
          <Card key={cluster.id} className="hover:shadow-lg transition-shadow">
            <CardHeader>
              <div className="flex items-center justify-between">
                <div>
                  <CardTitle className="flex items-center">
                    <cluster.icon className="h-5 w-5 mr-2" />
                    {cluster.name}
                  </CardTitle>
                  <CardDescription>{cluster.industry}</CardDescription>
                </div>
                <div className="text-right">
                  <Badge variant="default" className="mb-1">
                    BMC {cluster.bmcOwnership}%
                  </Badge>
                  <div className="text-xs text-muted-foreground">
                    {cluster.memberCompanies.length} c√¥ng ty
                  </div>
                </div>
              </div>
            </CardHeader>
            <CardContent>
              <div className="space-y-4">
                {/* Mini Holding Metrics */}
                <div className="grid grid-cols-2 gap-4">
                  <div className="space-y-1">
                    <div className="text-sm text-muted-foreground">Doanh thu Q2</div>
                    <div className="font-semibold text-lg">{cluster.revenue} t·ª∑</div>
                  </div>
                  <div className="space-y-1">
                    <div className="text-sm text-muted-foreground">L·ª£i nhu·∫≠n</div>
                    <div className="font-semibold text-lg">{cluster.profit} t·ª∑</div>
                  </div>
                  <div className="space-y-1">
                    <div className="text-sm text-muted-foreground">Nh√¢n s·ª±</div>
                    <div className="font-semibold">{cluster.employees.toLocaleString()}</div>
                  </div>
                  <div className="space-y-1">
                    <div className="text-sm text-muted-foreground">KPI TB</div>
                    <div className="font-semibold">{cluster.avgKPI}%</div>
                  </div>
                </div>

                {/* Growth & Fund Info */}
                <div className="grid grid-cols-2 gap-2">
                  <div className={`flex items-center justify-between p-2 rounded-lg ${
                    cluster.growth > 15 ? 'bg-green-50 dark:bg-green-950/20' : 
                    cluster.growth < 10 ? 'bg-red-50 dark:bg-red-950/20' :
                    'bg-blue-50 dark:bg-blue-950/20'
                  }`}>
                    <span className="text-sm font-medium">Growth</span>
                    <span className={`font-bold ${
                      cluster.growth > 15 ? 'text-green-600' : 
                      cluster.growth < 10 ? 'text-red-600' :
                      'text-blue-600'
                    }`}>
                      +{cluster.growth}%
                    </span>
                  </div>
                  <div className="flex items-center justify-between p-2 bg-purple-50 dark:bg-purple-950/20 rounded-lg">
                    <span className="text-sm font-medium">Fund</span>
                    <span className="font-bold text-purple-600">{cluster.sectorFund}B</span>
                  </div>
                </div>

                {/* Th√†nh vi√™n c·ª•m ng√†nh */}
                <div className="space-y-2">
                  <div className="text-sm font-medium">C√¥ng ty th√†nh vi√™n:</div>
                  {cluster.memberCompanies.map((company, idx) => (
                    <div key={idx} className="flex items-center justify-between text-sm p-2 bg-muted/30 rounded">
                      <span className="font-medium">{company.name}</span>
                      <div className="flex items-center space-x-2">
                        <Badge variant="outline" className="text-xs">
                          {company.level}
                        </Badge>
                        <span className="text-xs text-muted-foreground">
                          {company.ownership}
                        </span>
                      </div>
                    </div>
                  ))}
                </div>

                {/* AI Insights Preview */}
                <div className="p-3 bg-gradient-to-r from-blue-50 to-purple-50 dark:from-blue-950/20 dark:to-purple-950/20 rounded-lg border-l-4 border-blue-500">
                  <h4 className="text-sm font-semibold text-blue-900 dark:text-blue-100 mb-2">ü§ñ AI Insight</h4>
                  <p className="text-xs text-blue-800 dark:text-blue-200 line-clamp-2">
                    {cluster.aiInsights.strengths}
                  </p>
                </div>

                <Button 
                  variant="outline" 
                  className="w-full"
                  onClick={() => setSelectedCluster(cluster)}
                >
                  Chi ti·∫øt Mini Holding
                  <ArrowRight className="h-4 w-4 ml-2" />
                </Button>
              </div>
            </CardContent>
          </Card>
        ))}
      </div>

      {/* F1 AI Insights v·ªõi d·ªØ li·ªáu th·ª±c */}
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center">
            <span className="mr-2">ü§ñ</span>
            AI Ph√¢n T√≠ch C·ª•m Ng√†nh F1 - Mini Holding
          </CardTitle>
        </CardHeader>
        <CardContent>
          <div className="space-y-4">
            <div className="p-4 bg-blue-50 dark:bg-blue-950/20 rounded-lg border-l-4 border-blue-500">
              <h4 className="font-semibold text-blue-900 dark:text-blue-100">üìä AI T√≥m T·∫Øt H·ªá Sinh Th√°i F1</h4>
              <p className="text-blue-800 dark:text-blue-200 mt-2">
                "T·ªïng doanh thu 3 c·ª•m ng√†nh ch√≠nh ƒë·∫°t {totalMetrics.revenue} t·ª∑ VNƒê. 
                üçî F&B cluster chi·∫øm 47% doanh thu (420 t·ª∑) v·ªõi 2,450 nh√¢n s·ª±. 
                üíª Tech cluster tƒÉng tr∆∞·ªüng nhanh nh·∫•t 25%, margin 21%. 
                üéì Edu cluster c·∫ßn tƒÉng t·ªëc chuy·ªÉn ƒë·ªïi s·ªë ƒë·ªÉ c·∫°nh tranh."
              </p>
            </div>
            
            <div className="p-4 bg-amber-50 dark:bg-amber-950/20 rounded-lg border-l-4 border-amber-500">
              <h4 className="font-semibold text-amber-900 dark:text-amber-100">‚ö†Ô∏è AI C·∫£nh B√°o Chi·∫øn L∆∞·ª£c</h4>
              <p className="text-amber-800 dark:text-amber-200 mt-2">
                "üéì Edu cluster tƒÉng tr∆∞·ªüng ch·∫≠m nh·∫•t (8%) do c·∫°nh tranh EdTech. 
                üçî F&B cluster c·∫ßn t·ªëi ∆∞u supply chain (DOH tƒÉng 5 ng√†y). 
                üíª Tech cluster r·ªßi ro brain-drain do c·∫°nh tranh BigTech."
              </p>
            </div>

            <div className="p-4 bg-green-50 dark:bg-green-950/20 rounded-lg border-l-4 border-green-500">
              <h4 className="font-semibold text-green-900 dark:text-green-100">üí° AI Strategy Recommendations</h4>
              <p className="text-green-800 dark:text-green-200 mt-2">
                "üöÄ TƒÉng ƒë·∫ßu t∆∞ Tech cluster 30% (ROI 35% d·ª± ki·∫øn). 
                üèóÔ∏è M&A 2-3 Fintech startups Q3. 
                üìö Digital transformation cho Edu cluster v·ªõi AI tutoring. 
                ü•§ M·ªü r·ªông F&B v·ªõi 5 chi nh√°nh premium Q4."
              </p>
            </div>

            <div className="p-4 bg-purple-50 dark:bg-purple-950/20 rounded-lg border-l-4 border-purple-500">
              <h4 className="font-semibold text-purple-900 dark:text-purple-100">üéØ KPI Targets Q3-Q4</h4>
              <p className="text-purple-800 dark:text-purple-200 mt-2">
                "F&B: 450 t·ª∑ doanh thu (+7%) | Tech: 380 t·ª∑ (+23%) | Edu: 180 t·ª∑ (+13%). 
                T·ªïng qu·ªπ ph√°t tri·ªÉn: 500 t·ª∑. Target BMC ownership tƒÉng l√™n 85% cho t·∫•t c·∫£ clusters."
              </p>
            </div>
          </div>
        </CardContent>
      </Card>

      {/* F1 Action Buttons */}
      <div className="flex justify-center space-x-4">
        <Button variant="default">
          <Building2 className="h-4 w-4 mr-2" />
          üè¢ Qu·∫£n l√Ω c·ª•m ng√†nh
        </Button>
        <Button variant="outline" onClick={() => navigate('/consolidated-report')}>
          <Zap className="h-4 w-4 mr-2" />
          üìä B√°o c√°o h·ª£p nh·∫•t
        </Button>
        <Button variant="outline">
          <Database className="h-4 w-4 mr-2" />
          üí∞ ƒêi·ªÅu ph·ªëi qu·ªπ
        </Button>
        <Button variant="outline">
          <Users className="h-4 w-4 mr-2" />
          üë• Cross-cluster HR
        </Button>
        <Button variant="outline">
          <Download className="h-4 w-4 mr-2" />
          üìà Xu·∫•t b√°o c√°o BMC
        </Button>
      </div>
    </div>
  );
}

// Detailed Cluster Dashboard Component
function ClusterDetailDashboard({ cluster, onBack }: { cluster: any; onBack: () => void }) {
  return (
    <div className="space-y-6">
      <div className="flex items-center justify-between">
        <div>
          <Button variant="outline" onClick={onBack} className="mb-4">
            ‚Üê Quay l·∫°i c·ª•m ng√†nh
          </Button>
          <h1 className="text-3xl font-bold">{cluster.name}</h1>
          <p className="text-muted-foreground">Chi ti·∫øt qu·∫£n tr·ªã c·ª•m ng√†nh - {cluster.industry}</p>
        </div>
      </div>

      <Tabs defaultValue="overview" className="space-y-6">
        <TabsList className="grid w-full grid-cols-9">
          <TabsTrigger value="overview">T·ªïng quan</TabsTrigger>
          <TabsTrigger value="finance">T√†i ch√≠nh</TabsTrigger>
          <TabsTrigger value="hr">Nh√¢n s·ª±</TabsTrigger>
          <TabsTrigger value="sales">Kinh doanh</TabsTrigger>
          <TabsTrigger value="operations">V·∫≠n h√†nh</TabsTrigger>
          <TabsTrigger value="legal">Ph√°p ch·∫ø</TabsTrigger>
          <TabsTrigger value="tech">C√¥ng ngh·ªá</TabsTrigger>
          <TabsTrigger value="rd">R&D</TabsTrigger>
          <TabsTrigger value="investment">ƒê·∫ßu t∆∞</TabsTrigger>
        </TabsList>

        <TabsContent value="overview" className="space-y-6">
          {/* Cluster Overview Cards */}
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
            <Card>
              <CardHeader>
                <CardTitle className="text-sm">Doanh Thu C·ª•m</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="text-2xl font-bold">{cluster.revenue} t·ª∑ VNƒê</div>
                <p className="text-xs text-muted-foreground">+{cluster.growth}% tƒÉng tr∆∞·ªüng</p>
              </CardContent>
            </Card>
            <Card>
              <CardHeader>
                <CardTitle className="text-sm">L·ª£i Nhu·∫≠n</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="text-2xl font-bold">{cluster.profit} t·ª∑ VNƒê</div>
                <p className="text-xs text-muted-foreground">T·ª∑ su·∫•t: {((cluster.profit / cluster.revenue) * 100).toFixed(1)}%</p>
              </CardContent>
            </Card>
            <Card>
              <CardHeader>
                <CardTitle className="text-sm">C√¥ng Ty Th√†nh Vi√™n</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="text-2xl font-bold">{cluster.companies.length}</div>
                <p className="text-xs text-muted-foreground">Nh√¢n s·ª±: {cluster.employees} ng∆∞·ªùi</p>
              </CardContent>
            </Card>
            <Card>
              <CardHeader>
                <CardTitle className="text-sm">KPI C·ª•m</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="text-2xl font-bold">{cluster.kpi}%</div>
                <p className="text-xs text-muted-foreground">M·ª•c ti√™u: 85%</p>
              </CardContent>
            </Card>
          </div>

          {/* Companies in Cluster */}
          <Card>
            <CardHeader>
              <CardTitle>C√¥ng Ty Trong C·ª•m ({cluster.companies.length})</CardTitle>
            </CardHeader>
            <CardContent>
              {cluster.companies.length > 0 ? (
                <div className="space-y-4">
                  {cluster.companies.map((company, index) => (
                    <div key={index} className="flex items-center justify-between p-4 border rounded-lg">
                      <div className="flex items-center space-x-4">
                        <div className="w-10 h-10 bg-primary/10 rounded-lg flex items-center justify-center">
                          <Building2 className="h-5 w-5 text-primary" />
                        </div>
                        <div>
                          <h4 className="font-semibold">{company.organizations?.name}</h4>
                          <p className="text-sm text-muted-foreground">
                            <Badge variant="outline" className="mr-2">{company.organizations?.level}</Badge>
                            {company.organizations?.industry}
                          </p>
                        </div>
                      </div>
                      <div className="flex items-center space-x-4 text-sm">
                        <div className="text-center">
                          <div className="font-semibold">25 t·ª∑</div>
                          <div className="text-muted-foreground">Doanh thu</div>
                        </div>
                        <div className="text-center">
                          <div className="font-semibold">88%</div>
                          <div className="text-muted-foreground">KPI</div>
                        </div>
                        <Button variant="outline" size="sm">
                          Chi ti·∫øt
                        </Button>
                      </div>
                    </div>
                  ))}
                </div>
              ) : (
                <div className="text-center py-8 text-muted-foreground">
                  <Building2 className="h-12 w-12 mx-auto mb-4 opacity-50" />
                  <p>Ch∆∞a c√≥ c√¥ng ty n√†o trong c·ª•m n√†y</p>
                </div>
              )}
            </CardContent>
          </Card>
        </TabsContent>

        {/* Other tabs would have detailed content for each department */}
        <TabsContent value="finance">
          <Card>
            <CardHeader>
              <CardTitle>T√†i Ch√≠nh H·ª£p Nh·∫•t C·ª•m</CardTitle>
            </CardHeader>
            <CardContent>
              <p className="text-muted-foreground">N·ªôi dung chi ti·∫øt v·ªÅ t√†i ch√≠nh c·ª•m ng√†nh...</p>
            </CardContent>
          </Card>
        </TabsContent>

        {/* Add other TabsContent for hr, sales, operations, legal, tech, rd, investment */}
      </Tabs>
    </div>
  );
}
