import React, { useState, useEffect } from 'react';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { Progress } from '@/components/ui/progress';
import { Alert, AlertDescription } from '@/components/ui/alert';
import { 
  Users, 
  TrendingUp, 
  DollarSign, 
  GraduationCap, 
  Factory, 
  Target, 
  Laptop, 
  Scale, 
  PiggyBank,
  BarChart3,
  Activity,
  AlertTriangle,
  CheckCircle,
  Clock,
  Eye,
  FileText,
  Settings,
  RefreshCw
} from 'lucide-react';

// Define department structure
interface Department {
  id: string;
  name: string;
  displayName: string;
  description: string;
  icon: React.ComponentType<any>;
  color: string;
  metrics: DepartmentMetric[];
  recentActivities: Activity[];
  kpis: KPI[];
}

interface DepartmentMetric {
  id: string;
  name: string;
  value: string | number;
  change: number;
  trend: 'up' | 'down' | 'stable';
  unit?: string;
}

interface Activity {
  id: string;
  title: string;
  description: string;
  timestamp: string;
  type: 'info' | 'warning' | 'success' | 'error';
  user?: string;
}

interface KPI {
  id: string;
  name: string;
  current: number;
  target: number;
  unit: string;
  status: 'good' | 'warning' | 'critical';
}

// Mock data for 9 departments
const DEPARTMENTS: Department[] = [
  {
    id: 'shareholders',
    name: 'shareholders',
    displayName: 'üìå Th√¥ng tin C·ªï ƒë√¥ng',
    description: 'Qu·∫£n l√Ω th√¥ng tin c·ªï ƒë√¥ng v√† quy·ªÅn l·ª£i',
    icon: Users,
    color: 'bg-purple-100 text-purple-800 border-purple-200',
    metrics: [
      { id: 'total_shareholders', name: 'T·ªïng c·ªï ƒë√¥ng', value: 45, change: 2.5, trend: 'up' },
      { id: 'ownership_bmc', name: 'S·ªü h·ªØu BMC', value: '15%', change: 0, trend: 'stable' },
      { id: 'dividend_paid', name: 'C·ªï t·ª©c ƒë√£ tr·∫£', value: '2.4B', change: 12.3, trend: 'up', unit: 'VND' },
      { id: 'voting_participation', name: 'Tham gia b·ªè phi·∫øu', value: '89%', change: 5.2, trend: 'up' }
    ],
    recentActivities: [
      { id: '1', title: 'ƒê·∫°i h·ªôi c·ªï ƒë√¥ng th∆∞·ªùng ni√™n', description: 'Th√¥ng qua ngh·ªã quy·∫øt ph√¢n ph·ªëi l·ª£i nhu·∫≠n', timestamp: '2025-01-15T10:00:00Z', type: 'success' },
      { id: '2', title: 'C·∫≠p nh·∫≠t danh s√°ch c·ªï ƒë√¥ng', description: '3 c·ªï ƒë√¥ng m·ªõi ƒë∆∞·ª£c th√™m v√†o h·ªá th·ªëng', timestamp: '2025-01-14T14:30:00Z', type: 'info' }
    ],
    kpis: [
      { id: 'dividend_yield', name: 'T·ª∑ su·∫•t c·ªï t·ª©c', current: 8.5, target: 10, unit: '%', status: 'warning' },
      { id: 'shareholder_satisfaction', name: 'H√†i l√≤ng c·ªï ƒë√¥ng', current: 92, target: 95, unit: '%', status: 'good' }
    ]
  },
  {
    id: 'business_marketing',
    name: 'business_marketing',
    displayName: 'üìä Kinh doanh ‚Äì Marketing',
    description: 'Qu·∫£n l√Ω ho·∫°t ƒë·ªông kinh doanh v√† marketing',
    icon: TrendingUp,
    color: 'bg-blue-100 text-blue-800 border-blue-200',
    metrics: [
      { id: 'revenue', name: 'Doanh thu th√°ng', value: '15.2B', change: 18.5, trend: 'up', unit: 'VND' },
      { id: 'customers', name: 'Kh√°ch h√†ng m·ªõi', value: 234, change: 12.3, trend: 'up' },
      { id: 'conversion_rate', name: 'T·ª∑ l·ªá chuy·ªÉn ƒë·ªïi', value: '3.8%', change: 0.5, trend: 'up' },
      { id: 'marketing_roi', name: 'ROI Marketing', value: '285%', change: 15.2, trend: 'up' }
    ],
    recentActivities: [
      { id: '1', title: 'Chi·∫øn d·ªãch Digital Marketing Q1', description: 'ƒê·∫°t 120% m·ª•c ti√™u reach', timestamp: '2025-01-15T09:00:00Z', type: 'success' },
      { id: '2', title: 'H·ª£p ƒë·ªìng kh√°ch h√†ng l·ªõn', description: 'K√Ω h·ª£p ƒë·ªìng 5 t·ª∑ v·ªõi ABC Corp', timestamp: '2025-01-14T16:20:00Z', type: 'success' }
    ],
    kpis: [
      { id: 'monthly_revenue', name: 'Doanh thu th√°ng', current: 15.2, target: 18, unit: 'B VND', status: 'warning' },
      { id: 'customer_acquisition', name: 'Thu h√∫t KH m·ªõi', current: 234, target: 200, unit: 'kh√°ch h√†ng', status: 'good' }
    ]
  },
  {
    id: 'finance_accounting',
    name: 'finance_accounting',
    displayName: 'üí∞ T√†i ch√≠nh ‚Äì K·∫ø to√°n',
    description: 'Qu·∫£n l√Ω t√†i ch√≠nh v√† k·∫ø to√°n doanh nghi·ªáp',
    icon: DollarSign,
    color: 'bg-green-100 text-green-800 border-green-200',
    metrics: [
      { id: 'profit', name: 'L·ª£i nhu·∫≠n r√≤ng', value: '3.8B', change: 22.1, trend: 'up', unit: 'VND' },
      { id: 'cash_flow', name: 'D√≤ng ti·ªÅn', value: '8.5B', change: 5.3, trend: 'up', unit: 'VND' },
      { id: 'debt_ratio', name: 'T·ª∑ l·ªá n·ª£', value: '35%', change: -2.1, trend: 'down' },
      { id: 'roa', name: 'ROA', value: '12.5%', change: 1.8, trend: 'up' }
    ],
    recentActivities: [
      { id: '1', title: 'B√°o c√°o t√†i ch√≠nh Q4', description: 'Ho√†n th√†nh b√°o c√°o t√†i ch√≠nh qu√Ω 4', timestamp: '2025-01-15T11:30:00Z', type: 'success' },
      { id: '2', title: 'Thanh to√°n kho·∫£n vay', description: 'Tr·∫£ tr∆∞·ªõc 2B VND kho·∫£n vay ng√¢n h√†ng', timestamp: '2025-01-13T10:15:00Z', type: 'info' }
    ],
    kpis: [
      { id: 'profit_margin', name: 'Bi√™n l·ª£i nhu·∫≠n', current: 25, target: 30, unit: '%', status: 'warning' },
      { id: 'liquidity_ratio', name: 'T·ª∑ l·ªá thanh kho·∫£n', current: 2.1, target: 2.0, unit: '', status: 'good' }
    ]
  },
  {
    id: 'hr_training',
    name: 'hr_training',
    displayName: 'üë• Nh√¢n s·ª± ‚Äì ƒê√†o t·∫°o',
    description: 'Qu·∫£n l√Ω nh√¢n s·ª± v√† ph√°t tri·ªÉn ƒë√†o t·∫°o',
    icon: GraduationCap,
    color: 'bg-orange-100 text-orange-800 border-orange-200',
    metrics: [
      { id: 'employees', name: 'T·ªïng nh√¢n vi√™n', value: 156, change: 8.3, trend: 'up' },
      { id: 'retention_rate', name: 'T·ª∑ l·ªá gi·ªØ ch√¢n', value: '94%', change: 2.1, trend: 'up' },
      { id: 'training_hours', name: 'Gi·ªù ƒë√†o t·∫°o', value: 1240, change: 15.6, trend: 'up' },
      { id: 'satisfaction', name: 'H√†i l√≤ng NV', value: '4.6/5', change: 0.2, trend: 'up' }
    ],
    recentActivities: [
      { id: '1', title: 'Ch∆∞∆°ng tr√¨nh ƒë√†o t·∫°o AI', description: '45 nh√¢n vi√™n ho√†n th√†nh kh√≥a h·ªçc AI c∆° b·∫£n', timestamp: '2025-01-15T14:00:00Z', type: 'success' },
      { id: '2', title: 'Tuy·ªÉn d·ª•ng v·ªã tr√≠ m·ªõi', description: 'Tuy·ªÉn th√™m 5 developer cho d·ª± √°n m·ªõi', timestamp: '2025-01-12T09:30:00Z', type: 'info' }
    ],
    kpis: [
      { id: 'productivity', name: 'NƒÉng su·∫•t lao ƒë·ªông', current: 85, target: 90, unit: '%', status: 'warning' },
      { id: 'skill_development', name: 'Ph√°t tri·ªÉn k·ªπ nƒÉng', current: 78, target: 80, unit: '%', status: 'warning' }
    ]
  },
  {
    id: 'production_logistics',
    name: 'production_logistics',
    displayName: 'üè≠ S·∫£n xu·∫•t ‚Äì Kho v·∫≠n',
    description: 'Qu·∫£n l√Ω s·∫£n xu·∫•t v√† logistics',
    icon: Factory,
    color: 'bg-gray-100 text-gray-800 border-gray-200',
    metrics: [
      { id: 'production_volume', name: 'S·∫£n l∆∞·ª£ng', value: '12.5K', change: 7.8, trend: 'up', unit: 'units' },
      { id: 'efficiency', name: 'Hi·ªáu su·∫•t', value: '87%', change: 3.2, trend: 'up' },
      { id: 'inventory_turnover', name: 'V√≤ng quay kho', value: '6.2', change: 0.8, trend: 'up' },
      { id: 'defect_rate', name: 'T·ª∑ l·ªá l·ªói', value: '0.8%', change: -0.3, trend: 'down' }
    ],
    recentActivities: [
      { id: '1', title: 'N√¢ng c·∫•p d√¢y chuy·ªÅn s·∫£n xu·∫•t', description: 'L·∫Øp ƒë·∫∑t thi·∫øt b·ªã t·ª± ƒë·ªông h√≥a m·ªõi', timestamp: '2025-01-14T08:00:00Z', type: 'info' },
      { id: '2', title: 'Ki·ªÉm tra ch·∫•t l∆∞·ª£ng', description: 'ƒê·∫°t 99.2% s·∫£n ph·∫©m ƒë·∫°t chu·∫©n', timestamp: '2025-01-13T16:45:00Z', type: 'success' }
    ],
    kpis: [
      { id: 'oee', name: 'OEE (Hi·ªáu su·∫•t t·ªïng th·ªÉ)', current: 82, target: 85, unit: '%', status: 'warning' },
      { id: 'on_time_delivery', name: 'Giao h√†ng ƒë√∫ng h·∫°n', current: 96, target: 98, unit: '%', status: 'warning' }
    ]
  },
  {
    id: 'strategy_rd',
    name: 'strategy_rd',
    displayName: 'üéØ Chi·∫øn l∆∞·ª£c ‚Äì R&D',
    description: 'Ph√°t tri·ªÉn chi·∫øn l∆∞·ª£c v√† nghi√™n c·ª©u',
    icon: Target,
    color: 'bg-red-100 text-red-800 border-red-200',
    metrics: [
      { id: 'rd_investment', name: 'ƒê·∫ßu t∆∞ R&D', value: '2.1B', change: 25.3, trend: 'up', unit: 'VND' },
      { id: 'projects', name: 'D·ª± √°n R&D', value: 8, change: 2, trend: 'up' },
      { id: 'patents', name: 'B·∫±ng s√°ng ch·∫ø', value: 3, change: 1, trend: 'up' },
      { id: 'innovation_score', name: 'Ch·ªâ s·ªë ƒë·ªïi m·ªõi', value: '7.8/10', change: 0.5, trend: 'up' }
    ],
    recentActivities: [
      { id: '1', title: 'D·ª± √°n AI chatbot', description: 'Ho√†n th√†nh 70% d·ª± √°n chatbot th√¥ng minh', timestamp: '2025-01-15T13:20:00Z', type: 'info' },
      { id: '2', title: 'H·ª£p t√°c nghi√™n c·ª©u', description: 'K√Ω MOU v·ªõi ƒê·∫°i h·ªçc B√°ch Khoa', timestamp: '2025-01-11T10:00:00Z', type: 'success' }
    ],
    kpis: [
      { id: 'rd_revenue_ratio', name: 'R&D/Doanh thu', current: 8.5, target: 10, unit: '%', status: 'warning' },
      { id: 'project_success_rate', name: 'T·ª∑ l·ªá d·ª± √°n th√†nh c√¥ng', current: 75, target: 80, unit: '%', status: 'warning' }
    ]
  },
  {
    id: 'tech_infrastructure',
    name: 'tech_infrastructure',
    displayName: 'üíª C√¥ng ngh·ªá ‚Äì H·∫° t·∫ßng s·ªë',
    description: 'Qu·∫£n l√Ω c√¥ng ngh·ªá v√† h·∫° t·∫ßng s·ªë',
    icon: Laptop,
    color: 'bg-cyan-100 text-cyan-800 border-cyan-200',
    metrics: [
      { id: 'system_uptime', name: 'Uptime h·ªá th·ªëng', value: '99.8%', change: 0.1, trend: 'up' },
      { id: 'security_score', name: 'ƒêi·ªÉm b·∫£o m·∫≠t', value: '95/100', change: 3, trend: 'up' },
      { id: 'automation_rate', name: 'T·ª∑ l·ªá t·ª± ƒë·ªông h√≥a', value: '78%', change: 12.5, trend: 'up' },
      { id: 'cloud_adoption', name: '√Åp d·ª•ng Cloud', value: '85%', change: 8.2, trend: 'up' }
    ],
    recentActivities: [
      { id: '1', title: 'N√¢ng c·∫•p h·ªá th·ªëng ERP', description: 'Tri·ªÉn khai ERP-AI phi√™n b·∫£n 2.0', timestamp: '2025-01-15T12:00:00Z', type: 'info' },
      { id: '2', title: 'B·∫£o m·∫≠t n√¢ng cao', description: 'C√†i ƒë·∫∑t h·ªá th·ªëng ph√°t hi·ªán x√¢m nh·∫≠p', timestamp: '2025-01-13T15:30:00Z', type: 'success' }
    ],
    kpis: [
      { id: 'digital_transformation', name: 'Chuy·ªÉn ƒë·ªïi s·ªë', current: 72, target: 80, unit: '%', status: 'warning' },
      { id: 'user_satisfaction', name: 'H√†i l√≤ng ng∆∞·ªùi d√πng', current: 88, target: 90, unit: '%', status: 'warning' }
    ]
  },
  {
    id: 'legal_compliance',
    name: 'legal_compliance',
    displayName: '‚öñÔ∏è Ph√°p ch·∫ø ‚Äì Tu√¢n th·ªß',
    description: 'Qu·∫£n l√Ω ph√°p l√Ω v√† tu√¢n th·ªß quy ƒë·ªãnh',
    icon: Scale,
    color: 'bg-indigo-100 text-indigo-800 border-indigo-200',
    metrics: [
      { id: 'compliance_score', name: 'ƒêi·ªÉm tu√¢n th·ªß', value: '98/100', change: 2, trend: 'up' },
      { id: 'legal_cases', name: 'V·ª• vi·ªác ph√°p l√Ω', value: 0, change: -2, trend: 'down' },
      { id: 'contracts', name: 'H·ª£p ƒë·ªìng x·ª≠ l√Ω', value: 45, change: 8, trend: 'up' },
      { id: 'audit_score', name: 'ƒêi·ªÉm ki·ªÉm to√°n', value: '96/100', change: 1, trend: 'up' }
    ],
    recentActivities: [
      { id: '1', title: 'Ki·ªÉm to√°n n·ªôi b·ªô Q4', description: 'Ho√†n th√†nh ki·ªÉm to√°n v·ªõi ƒëi·ªÉm s·ªë cao', timestamp: '2025-01-14T11:00:00Z', type: 'success' },
      { id: '2', title: 'C·∫≠p nh·∫≠t quy ƒë·ªãnh m·ªõi', description: '√Åp d·ª•ng Lu·∫≠t Doanh nghi·ªáp s·ª≠a ƒë·ªïi', timestamp: '2025-01-12T14:20:00Z', type: 'info' }
    ],
    kpis: [
      { id: 'regulatory_compliance', name: 'Tu√¢n th·ªß quy ƒë·ªãnh', current: 98, target: 100, unit: '%', status: 'good' },
      { id: 'risk_management', name: 'Qu·∫£n l√Ω r·ªßi ro', current: 92, target: 95, unit: '%', status: 'warning' }
    ]
  },
  {
    id: 'investment_fund',
    name: 'investment_fund',
    displayName: 'üíµ ƒê·∫ßu t∆∞ ‚Äì Qu·ªπ',
    description: 'Qu·∫£n l√Ω ƒë·∫ßu t∆∞ v√† qu·ªπ t√†i ch√≠nh',
    icon: PiggyBank,
    color: 'bg-emerald-100 text-emerald-800 border-emerald-200',
    metrics: [
      { id: 'portfolio_value', name: 'Gi√° tr·ªã danh m·ª•c', value: '125B', change: 8.7, trend: 'up', unit: 'VND' },
      { id: 'roi', name: 'ROI trung b√¨nh', value: '15.2%', change: 2.3, trend: 'up' },
      { id: 'active_investments', name: 'Kho·∫£n ƒë·∫ßu t∆∞', value: 12, change: 1, trend: 'up' },
      { id: 'fund_performance', name: 'Hi·ªáu su·∫•t qu·ªπ', value: '18.5%', change: 3.1, trend: 'up' }
    ],
    recentActivities: [
      { id: '1', title: 'ƒê·∫ßu t∆∞ startup c√¥ng ngh·ªá', description: 'R√≥t 10B v√†o startup AI healthcare', timestamp: '2025-01-15T15:30:00Z', type: 'success' },
      { id: '2', title: 'Tho√°i v·ªën th√†nh c√¥ng', description: 'B√°n c·ªï ph·∫ßn v·ªõi l·ª£i nhu·∫≠n 200%', timestamp: '2025-01-10T09:45:00Z', type: 'success' }
    ],
    kpis: [
      { id: 'diversification', name: 'ƒêa d·∫°ng h√≥a', current: 85, target: 90, unit: '%', status: 'warning' },
      { id: 'risk_adjusted_return', name: 'L·ª£i nhu·∫≠n hi·ªáu ch·ªânh r·ªßi ro', current: 12.8, target: 15, unit: '%', status: 'warning' }
    ]
  }
];

interface DepartmentDashboardProps {
  userRole?: string;
  userDepartments?: string[];
}

const DepartmentDashboard: React.FC<DepartmentDashboardProps> = ({ 
  userRole = 'ceo', 
  userDepartments = [] 
}) => {
  const [selectedDepartment, setSelectedDepartment] = useState<Department>(DEPARTMENTS[0]);
  const [refreshing, setRefreshing] = useState(false);

  // Filter departments based on user permissions
  const getAccessibleDepartments = () => {
    if (userRole === 'bmc_holdings' || userRole === 'ceo') {
      return DEPARTMENTS; // Full access
    }
    
    if (userRole === 'department_manager' && userDepartments.length > 0) {
      return DEPARTMENTS.filter(dept => userDepartments.includes(dept.id));
    }
    
    if (userRole === 'finance_manager') {
      return DEPARTMENTS.filter(dept => 
        dept.id === 'finance_accounting' || dept.id === 'investment_fund'
      );
    }
    
    if (userRole === 'hr_manager') {
      return DEPARTMENTS.filter(dept => dept.id === 'hr_training');
    }
    
    // Employee - limited access
    return DEPARTMENTS.filter(dept => 
      dept.id === 'hr_training' || dept.id === 'business_marketing'
    );
  };

  const accessibleDepartments = getAccessibleDepartments();

  const handleRefresh = async () => {
    setRefreshing(true);
    // Simulate data refresh
    await new Promise(resolve => setTimeout(resolve, 1500));
    setRefreshing(false);
  };

  const getTrendIcon = (trend: 'up' | 'down' | 'stable') => {
    switch (trend) {
      case 'up': return <TrendingUp className="w-4 h-4 text-green-600" />;
      case 'down': return <TrendingUp className="w-4 h-4 text-red-600 rotate-180" />;
      default: return <Activity className="w-4 h-4 text-gray-600" />;
    }
  };

  const getKPIStatus = (status: 'good' | 'warning' | 'critical') => {
    switch (status) {
      case 'good': return { color: 'text-green-600', icon: CheckCircle };
      case 'warning': return { color: 'text-yellow-600', icon: AlertTriangle };
      case 'critical': return { color: 'text-red-600', icon: AlertTriangle };
    }
  };

  const getActivityIcon = (type: 'info' | 'warning' | 'success' | 'error') => {
    switch (type) {
      case 'success': return <CheckCircle className="w-4 h-4 text-green-600" />;
      case 'warning': return <AlertTriangle className="w-4 h-4 text-yellow-600" />;
      case 'error': return <AlertTriangle className="w-4 h-4 text-red-600" />;
      default: return <Clock className="w-4 h-4 text-blue-600" />;
    }
  };

  return (
    <div className="p-6 space-y-6">
      <div className="flex items-center justify-between">
        <div>
          <h1 className="text-3xl font-bold">Dashboard Ph√≤ng ban ERP-AI</h1>
          <p className="text-muted-foreground">
            Theo d√µi ho·∫°t ƒë·ªông 9 ph√≤ng ban ‚Ä¢ Quy·ªÅn truy c·∫≠p: {userRole}
          </p>
        </div>
        <div className="flex gap-2">
          <Button 
            variant="outline" 
            onClick={handleRefresh}
            disabled={refreshing}
          >
            <RefreshCw className={`w-4 h-4 mr-2 ${refreshing ? 'animate-spin' : ''}`} />
            L√†m m·ªõi
          </Button>
          <Button variant="outline">
            <Settings className="w-4 h-4 mr-2" />
            C√†i ƒë·∫∑t
          </Button>
        </div>
      </div>

      {/* Department Navigation */}
      <div className="grid grid-cols-3 md:grid-cols-5 lg:grid-cols-9 gap-2">
        {accessibleDepartments.map((dept) => {
          const Icon = dept.icon;
          const isSelected = selectedDepartment.id === dept.id;
          
          return (
            <Button
              key={dept.id}
              variant={isSelected ? "default" : "outline"}
              className={`h-auto p-3 flex flex-col items-center gap-2 text-xs ${
                isSelected ? '' : 'hover:bg-muted'
              }`}
              onClick={() => setSelectedDepartment(dept)}
            >
              <Icon className="w-5 h-5" />
              <span className="text-center leading-tight">
                {dept.displayName.replace(/^[üìåüìäüí∞üë•üè≠üéØüíª‚öñÔ∏èüíµ]\s/, '')}
              </span>
            </Button>
          );
        })}
      </div>

      {/* Selected Department Dashboard */}
      <div className="space-y-6">
        <div className="flex items-center gap-3">
          <selectedDepartment.icon className="w-6 h-6 text-primary" />
          <div>
            <h2 className="text-2xl font-bold">{selectedDepartment.displayName}</h2>
            <p className="text-muted-foreground">{selectedDepartment.description}</p>
          </div>
        </div>

        {/* Key Metrics */}
        <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-4">
          {selectedDepartment.metrics.map((metric) => (
            <Card key={metric.id}>
              <CardHeader className="pb-2">
                <div className="flex items-center justify-between">
                  <CardDescription className="text-xs">{metric.name}</CardDescription>
                  {getTrendIcon(metric.trend)}
                </div>
              </CardHeader>
              <CardContent>
                <div className="text-2xl font-bold">
                  {metric.value}{metric.unit && ` ${metric.unit}`}
                </div>
                <div className={`text-xs flex items-center gap-1 ${
                  metric.change > 0 ? 'text-green-600' : 
                  metric.change < 0 ? 'text-red-600' : 'text-gray-600'
                }`}>
                  {metric.change > 0 ? '+' : ''}{metric.change}%
                  <span className="text-muted-foreground">so v·ªõi th√°ng tr∆∞·ªõc</span>
                </div>
              </CardContent>
            </Card>
          ))}
        </div>

        <div className="grid lg:grid-cols-2 gap-6">
          {/* KPIs */}
          <Card>
            <CardHeader>
              <CardTitle className="flex items-center gap-2">
                <BarChart3 className="w-5 h-5" />
                Ch·ªâ s·ªë KPI
              </CardTitle>
              <CardDescription>Theo d√µi hi·ªáu su·∫•t theo m·ª•c ti√™u</CardDescription>
            </CardHeader>
            <CardContent className="space-y-4">
              {selectedDepartment.kpis.map((kpi) => {
                const statusConfig = getKPIStatus(kpi.status);
                const StatusIcon = statusConfig.icon;
                const progress = (kpi.current / kpi.target) * 100;
                
                return (
                  <div key={kpi.id} className="space-y-2">
                    <div className="flex items-center justify-between">
                      <div className="flex items-center gap-2">
                        <StatusIcon className={`w-4 h-4 ${statusConfig.color}`} />
                        <span className="text-sm font-medium">{kpi.name}</span>
                      </div>
                      <span className="text-sm text-muted-foreground">
                        {kpi.current}{kpi.unit} / {kpi.target}{kpi.unit}
                      </span>
                    </div>
                    <Progress value={Math.min(progress, 100)} className="h-2" />
                  </div>
                );
              })}
            </CardContent>
          </Card>

          {/* Recent Activities */}
          <Card>
            <CardHeader>
              <CardTitle className="flex items-center gap-2">
                <Activity className="w-5 h-5" />
                Ho·∫°t ƒë·ªông G·∫ßn ƒë√¢y
              </CardTitle>
              <CardDescription>C·∫≠p nh·∫≠t m·ªõi nh·∫•t t·ª´ ph√≤ng ban</CardDescription>
            </CardHeader>
            <CardContent>
              <div className="space-y-4">
                {selectedDepartment.recentActivities.map((activity) => (
                  <div key={activity.id} className="flex gap-3">
                    {getActivityIcon(activity.type)}
                    <div className="flex-1 space-y-1">
                      <div className="flex items-center justify-between">
                        <h4 className="text-sm font-medium">{activity.title}</h4>
                        <span className="text-xs text-muted-foreground">
                          {new Date(activity.timestamp).toLocaleDateString('vi-VN')}
                        </span>
                      </div>
                      <p className="text-xs text-muted-foreground">{activity.description}</p>
                    </div>
                  </div>
                ))}
              </div>
            </CardContent>
          </Card>
        </div>

        {/* Quick Actions */}
        <Card>
          <CardHeader>
            <CardTitle>Thao t√°c Nhanh</CardTitle>
            <CardDescription>C√°c ch·ª©c nƒÉng th∆∞·ªùng d√πng cho {selectedDepartment.displayName}</CardDescription>
          </CardHeader>
          <CardContent>
            <div className="flex flex-wrap gap-2">
              <Button variant="outline" size="sm">
                <FileText className="w-4 h-4 mr-2" />
                T·∫°o b√°o c√°o
              </Button>
              <Button variant="outline" size="sm">
                <Eye className="w-4 h-4 mr-2" />
                Xem chi ti·∫øt
              </Button>
              <Button variant="outline" size="sm">
                <BarChart3 className="w-4 h-4 mr-2" />
                Ph√¢n t√≠ch d·ªØ li·ªáu
              </Button>
              <Button variant="outline" size="sm">
                <Settings className="w-4 h-4 mr-2" />
                C·∫•u h√¨nh
              </Button>
            </div>
          </CardContent>
        </Card>
      </div>

      {/* Access Control Notice */}
      {userRole !== 'bmc_holdings' && userRole !== 'ceo' && (
        <Alert>
          <AlertTriangle className="h-4 w-4" />
          <AlertDescription>
            B·∫°n ch·ªâ c√≥ quy·ªÅn truy c·∫≠p {accessibleDepartments.length}/{DEPARTMENTS.length} ph√≤ng ban. 
            Li√™n h·ªá qu·∫£n tr·ªã vi√™n ƒë·ªÉ ƒë∆∞·ª£c c·∫•p th√™m quy·ªÅn truy c·∫≠p.
          </AlertDescription>
        </Alert>
      )}
    </div>
  );
};

export default DepartmentDashboard;